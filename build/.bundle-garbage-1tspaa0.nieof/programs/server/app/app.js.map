{"version":3,"sources":["meteor://ðŸ’»app/server/test/test-api/test-api-on-dapp.js","meteor://ðŸ’»app/server/test/test-api/test-api-on-node.js","meteor://ðŸ’»app/server/test/0-basic-doi-tests.0.js","meteor://ðŸ’»app/server/test/1-basic-doi-test.1.js","meteor://ðŸ’»app/server/test/2-basic-doi-test.2.js","meteor://ðŸ’»app/server/test/3-basic-doi-test.3.js","meteor://ðŸ’»app/server/test/5-selenium-test-flo.js","meteor://ðŸ’»app/server/test/basic-doi-test-nico.js","meteor://ðŸ’»app/server/test/basic-doi-test.flo.js","meteor://ðŸ’»app/server/publications/user.js"],"names":["module","export","login","requestDOI","getNameIdOfRawTransaction","getNameIdOfOptInFromRawTx","fetchConfirmLinkFromPop3Mail","deleteAllEmailsFromPop3","confirmLink","verifyDOI","createUser","findUser","findOptIn","exportOptIns","requestConfirmVerifyBasicDoi","updateUser","resetUsers","Meteor","link","v","chai","quotedPrintableDecode","AssertionError","OptInsCollection","Recipients","getHttpGET","getHttpGETdata","getHttpPOST","getHttpPUT","testLogging","RecipientsCollection","httpGET","httpGETdata","httpPOST","httpPUT","testLog","generatetoaddress","headers","os","require","POP3Client","url","paramsLogin","log","urlLogin","headersLogin","realDataLogin","params","result","statusCode","dataLogin","data","statusLogin","status","assert","equal","auth","recipient_mail","sender_mail","urlOptIn","dataOptIn","JSON","stringify","headersOptIn","userId","authToken","realDataOptIn","resultOptIn","Array","isArray","forEach","element","txId","syncFunc","wrapAsync","get_nameid_of_raw_transaction","callback","nameId","running","counter","loop","dataGetRawTransaction","realdataGetRawTransaction","resultGetRawTransaction","vout","scriptPubKey","nameOp","undefined","name","txid","ex","Promise","resolve","setTimeout","optInId","get_nameid_of_optin_from_rawtx","our_optIn","findOne","_id","notEqual","isBelow","error","hostname","port","username","password","alicedapp_url","fetch_confirm_link_from_pop3_mail","client","tlserrs","enabletls","debug","on","rawdata","list","msgcount","msgnumber","err","rset","retr","maildata","html","replaceAll","expect","indexOf","to","not","linkdata","substring","be","null","requestData","dele","quit","end","str","find","replace","RegExp","delete_all_emails_from_pop3","i","confirm_link","doiConfirmlinkResult","content","have","string","e","dAppUrl","dAppUrlAuth","node_url_alice","rpcAuthAlice","verify_doi","our_recipient_mail","urlVerify","recipient_public_key","email","publicKey","resultVerify","statusVerify","dataVerify","name_id","headersVerify","realdataVerify","val","global","aliceAddress","templateURL","headersUser","mailTemplate","urlUsers","dataUser","realDataUser","res","userid","Accounts","users","urlExport","dappUrlAlice","dataLoginAlice","dappUrlBob","optionalData","recipient_pop3username","recipient_pop3password","request_confirm_verify_basic_doi","sender_mail_in","resultDataOptInTmp","resultDataOptIn","confirmedLink","link2Confirm","id","index","length","tmpId","optIn","updateId","usDat","profile","remove","initBlockchain","isNodeAlive","isNodeAliveAndConnectedToHost","importPrivKey","getNewAddress","getBalance","waitToStartContainer","deleteOptInsFromAliceAndBob","start3rdNode","stopDockerBob","getContainerIdOfName","startDockerBob","doichainAddNode","getDockerStatus","connectDockerBob","runAndWait","logBlockchain","sudo","exec","node_url_bob","rpcAuth","privKeyBob","aliceContainerId","statusDocker","parse","balance","Number","connections","exception","wait_to_start_container","startedContainerId","version","error2","delete_options_from_alice_and_bob","containerId","inside_docker","stdout","stderr","dataGetNetworkInfo","realdataGetNetworkInfo","resultGetNetworkInfo","statusGetNetworkInfo","host","statusAddNode","dataGetPeerInfo","realdataGetPeerInfo","resultGetPeerInfo","statusGetPeerInfo","isAbove","privKey","rescan","data_importprivkey","realdata_importprivkey","dataGetNewAddress","realdataGetNewAddress","resultGetNewAddress","statusOptInGetNewAddress","newAddress","toaddress","amount","dataGenerate","headersGenerates","realdataGenerate","resultGenerate","statusResultGenerate","dataGetBalance","realdataGetBalance","resultGetBalance","get_container_id_of_name","bobsContainerId","toString","trim","stop_docker_bob","doichain_add_node","get_docker_status","start_docker_bob","connect_docker_bob","start_3rd_node","network","run_and_wait","runfunction","seconds","insde_docker","dAppLogin","isAppTest","describe","timeout","before","it","aliceBalance","templateUrlA","templateUrlB","aliceALogin","aliceBLogin","xit","done","logAdmin","userA","userB","sender_mail_alice_a","sender_mail_alice_b","logUserA","logUserB","exportedOptIns","exportedOptInsA","ownerId","userUp","changedData","logUserUp","coDoiList","adLog","returnedData","stdout2","stderr2","isTest","xdescribe","beforeEach","publish","fields","ready"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport {chai} from 'meteor/practicalmeteor:chai';\nimport {quotedPrintableDecode} from \"emailjs-mime-codec\";\nimport { AssertionError } from \"assert\";\nimport {\n    OptInsCollection,\n    RecipientsCollection as Recipients,\n    httpGET as getHttpGET,\n    httpGETdata as getHttpGETdata,\n    httpPOST as getHttpPOST,\n    httpPUT as getHttpPUT,\n    testLog as testLogging\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {generatetoaddress} from \"./test-api-on-node\";\n\nconst headers = { 'Content-Type':'text/plain'  };\nconst os = require('os');\nvar POP3Client = require(\"poplib\");\n\nexport function login(url, paramsLogin, log) {\n    if(log) testLogging('dApp login.');\n\n    const urlLogin = url+'/api/v1/login';\n    const headersLogin = [{'Content-Type':'application/json'}];\n    const realDataLogin= { params: paramsLogin, headers: headersLogin };\n\n    const result = getHttpPOST(urlLogin, realDataLogin);\n\n    if(log) testLogging('result login:',result);\n    const statusCode = result.statusCode;\n    const dataLogin = result.data;\n\n    const statusLogin = dataLogin.status;\n    chai.assert.equal(200, statusCode);\n    chai.assert.equal('success', statusLogin);\n    return dataLogin.data;\n}\n\nexport function requestDOI(url, auth, recipient_mail, sender_mail, data,  log) {\n    if(log) testLogging('step 1 - requestDOI called via REST');\n\n    const urlOptIn = url+'/api/v1/opt-in';\n    let dataOptIn = {};\n\n    if(data){\n        dataOptIn = {\n            \"recipient_mail\":recipient_mail,\n            \"sender_mail\":sender_mail,\n            \"data\":JSON.stringify(data)\n        }\n    }else{\n        dataOptIn = {\n            \"recipient_mail\":recipient_mail,\n            \"sender_mail\":sender_mail\n        }\n    }\n\n    const headersOptIn = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    };\n\n    const realDataOptIn = { data: dataOptIn, headers: headersOptIn};\n    const resultOptIn = getHttpPOST(urlOptIn, realDataOptIn);\n\n    //logBlockchain(\"resultOptIn\",resultOptIn);\n    chai.assert.equal(200, resultOptIn.statusCode);\n    testLogging(\"RETURNED VALUES: \",resultOptIn);\n    if(Array.isArray(resultOptIn.data)){\n        testLogging('adding coDOIs');\n        resultOptIn.data.forEach(element => {\n            chai.assert.equal('success', element.status);\n        });\n    }\n\n    else{\n        testLogging('adding DOI');\n    chai.assert.equal('success',  resultOptIn.data.status);\n    }\n    return resultOptIn.data;\n}\n\nexport function getNameIdOfRawTransaction(url, auth, txId) {\n    testLogging('pre-start of getNameIdOfRawTransaction',txId);\n    const syncFunc = Meteor.wrapAsync(get_nameid_of_raw_transaction);\n    return syncFunc(url, auth, txId);\n}\n\nfunction get_nameid_of_raw_transaction(url, auth, txId, callback){\n\n    let nameId = '';\n    let running = true;\n    let counter = 0;\n    testLogging('start getNameIdOfRawTransaction',txId);\n    (async function loop() {\n        while(running && ++counter<1500){ //trying 50x to get email from bobs mailbox\n            try{\n                    testLogging('trying to get transaction',txId);\n                    const dataGetRawTransaction = {\"jsonrpc\": \"1.0\", \"id\":\"getrawtransaction\", \"method\": \"getrawtransaction\", \"params\": [txId,1] };\n                    const realdataGetRawTransaction = { auth: auth, data: dataGetRawTransaction, headers: headers };\n                    const resultGetRawTransaction = getHttpPOST(url, realdataGetRawTransaction);\n\n                    if(resultGetRawTransaction.data.result.vout[1].scriptPubKey.nameOp!==undefined){\n                        nameId = resultGetRawTransaction.data.result.vout[1].scriptPubKey.nameOp.name;\n                    }\n                    else{\n                        nameId = resultGetRawTransaction.data.result.vout[0].scriptPubKey.nameOp.name;\n                    }\n\n                    if(resultGetRawTransaction.data.result.txid!==undefined){\n                        testLogging('confirmed txid:'+resultGetRawTransaction.data.result.txid);\n                        running=false;\n                    }\n                    //chai.assert.equal(txId, resultGetRawTransaction.data.result.txid);\n            }catch(ex){\n                testLogging('trying to get email - so far no success:',counter);\n                await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n        }\n        testLogging('end of getNameIdOfRawTransaction returning nameId',nameId);\n        callback(null,nameId);\n    })();\n}\n\nexport function getNameIdOfOptInFromRawTx(url, auth, optInId,log) {\n    const syncFunc = Meteor.wrapAsync(get_nameid_of_optin_from_rawtx);\n    return syncFunc(url, auth, optInId,log);\n}\n\n\nasync function get_nameid_of_optin_from_rawtx(url, auth, optInId, log, callback){\n    testLogging('step 2 - getting nameId of raw transaction from blockchain');\n    if(log) testLogging('the txId will be added a bit later as soon as the schedule picks up the job and inserts it into the blockchain. it does not happen immediately. waiting...');\n    let running = true;\n    let counter = 0;\n    let our_optIn = null;\n    let nameId = null;\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get opt-in\n\n            testLogging('find opt-In',optInId);\n            our_optIn = OptInsCollection.findOne({_id: optInId});\n            if(our_optIn.txId!==undefined){\n                testLogging('found txId of opt-In',our_optIn.txId);\n                running = false;\n            }\n            else{\n                testLogging('did not find txId yet for opt-In-Id',our_optIn._id);\n            }\n\n            await new Promise(resolve => setTimeout(resolve, 3000));\n        }\n    })();\n\n    try{\n\n        chai.assert.equal(our_optIn._id,optInId);\n        if(log) testLogging('optIn:',our_optIn);\n        nameId = getNameIdOfRawTransaction(url,auth,our_optIn.txId);\n        chai.assert.equal(\"e/\"+our_optIn.nameId,nameId);\n\n        if(log) testLogging('nameId:',nameId);\n        chai.assert.notEqual(nameId,null);\n        chai.assert.isBelow(counter,50,\"OptIn not found after retries\");\n        callback(null,nameId);\n    }\n    catch(error){\n        callback(error,nameId);\n    }\n}\n\nexport function fetchConfirmLinkFromPop3Mail(hostname,port,username,password,alicedapp_url,log) {\n    const syncFunc = Meteor.wrapAsync(fetch_confirm_link_from_pop3_mail);\n    return syncFunc(hostname,port,username,password,alicedapp_url,log);\n}\n\nfunction fetch_confirm_link_from_pop3_mail(hostname,port,username,password,alicedapp_url,log,callback) {\n\n    testLogging(\"step 3 - getting email from bobs inbox\");\n    //https://github.com/ditesh/node-poplib/blob/master/demos/retrieve-all.js\n    var client = new POP3Client(port, hostname, {\n        tlserrs: false,\n        enabletls: false,\n        debug: false\n    });\n\n    client.on(\"connect\", function() {\n        testLogging(\"CONNECT success\");\n        client.login(username, password);\n        client.on(\"login\", function(status, rawdata) {\n            if (status) {\n                testLogging(\"LOGIN/PASS success\");\n                client.list();\n\n                client.on(\"list\", function(status, msgcount, msgnumber, data, rawdata) {\n\n                    if (status === false) {\n                        const err = \"LIST failed\"+ msgnumber;\n                        client.rset();\n                        callback(err, null);\n                        return;\n                    } else {\n                        if(log) testLogging(\"LIST success with \" + msgcount + \" element(s)\",'');\n\n                        //chai.expect(msgcount).to.be.above(0, 'no email in bobs inbox');\n                        if (msgcount > 0){\n                            client.retr(1);\n                            client.on(\"retr\", function(status, msgnumber, maildata, rawdata) {\n\n                                if (status === true) {\n                                    if(log) testLogging(\"RETR success \" + msgnumber);\n\n                                    //https://github.com/emailjs/emailjs-mime-codec\n                                    let html  = quotedPrintableDecode(maildata);\n                                    if(os.hostname()!=='regtest'){ //this is probably a selenium test from outside docker  - so replace URL so it can be confirmed\n                                            html = replaceAll(html,'http://172.20.0.8','http://localhost');  //TODO put this IP inside a config\n                                    }\n                                    chai.expect(html.indexOf(alicedapp_url)).to.not.equal(-1);\n                                    const linkdata =  html.substring(html.indexOf(alicedapp_url),html.indexOf(\"'\",html.indexOf(alicedapp_url)));\n\n                                    chai.expect(linkdata).to.not.be.null;\n                                    if(log && !(log===true))chai.expect(html.indexOf(log)).to.not.equal(-1);\n                                    const requestData = {\"linkdata\":linkdata,\"html\":html}\n\n                                    client.dele(msgnumber);\n                                    client.on(\"dele\", function(status, msgnumber, data, rawdata) {\n                                        client.quit();\n\n                                        client.end();\n                                        client = null;\n                                        callback(null,linkdata);\n                                    });\n\n                                } else {\n                                    const err = \"RETR failed for msgnumber \"+ msgnumber;\n                                    client.rset();\n                                    client.end();\n                                    client = null;\n                                    callback(err, null);\n                                    return;\n                                }\n                            });\n                        }\n                        else{\n                            const err = \"empty mailbox\";\n                            callback(err, null);\n                            client.quit();\n                            client.end();\n                            client = null;\n                            return;\n                        }\n                    }\n                });\n\n            } else {\n                const err = \"LOGIN/PASS failed\";\n                callback(err, null);\n                client.quit();\n                client.end();\n                client = null;\n                return;\n            }\n        });\n    });\n}\n\nfunction replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\nexport function deleteAllEmailsFromPop3(hostname,port,username,password,log) {\n    const syncFunc = Meteor.wrapAsync(delete_all_emails_from_pop3);\n    return syncFunc(hostname,port,username,password,log);\n}\n\nfunction delete_all_emails_from_pop3(hostname,port,username,password,log,callback) {\n\n    testLogging(\"deleting all emails from bobs inbox\");\n    //https://github.com/ditesh/node-poplib/blob/master/demos/retrieve-all.js\n    var client = new POP3Client(port, hostname, {\n        tlserrs: false,\n        enabletls: false,\n        debug: false\n    });\n\n    client.on(\"connect\", function() {\n        testLogging(\"CONNECT success\");\n        client.login(username, password);\n        client.on(\"login\", function(status, rawdata) {\n            if (status) {\n                testLogging(\"LOGIN/PASS success\");\n                client.list();\n\n                client.on(\"list\", function(status, msgcount, msgnumber, data, rawdata) {\n\n                    if (status === false) {\n                        const err = \"LIST failed\"+ msgnumber;\n                        client.rset();\n                        callback(err, null);\n                        return;\n                    } else {\n                        if(log) testLogging(\"LIST success with \" + msgcount + \" element(s)\",'');\n\n                        //chai.expect(msgcount).to.be.above(0, 'no email in bobs inbox');\n                        if (msgcount > 0){\n                            for(let i = 0;i<=msgcount;i++){\n                                client.dele(i+1);\n                                client.on(\"dele\", function(status, msgnumber, data, rawdata) {\n                                    testLogging(\"deleted email\"+(i+1)+\" status:\"+status);\n                                   if(i==msgcount-1){\n                                       client.quit();\n\n                                       client.end();\n                                       client = null;\n                                       if(log) testLogging(\"all emails deleted\");\n                                       callback(null,'all emails deleted');\n                                   }\n                                });\n                            }\n                        }\n                        else{\n                            const err = \"empty mailbox\";\n                            callback(null, err); //we do not send an error here when inbox is empty\n                            client.quit();\n                            client.end();\n                            client = null;\n                            return;\n                        }\n                    }\n                });\n\n            } else {\n                const err = \"LOGIN/PASS failed\";\n                callback(err, null);\n                client.quit();\n                client.end();\n                client = null;\n                return;\n            }\n        });\n    });\n}\n\nexport function confirmLink(confirmLink) {\n    const syncFunc = Meteor.wrapAsync(confirm_link);\n    return syncFunc(confirmLink);\n}\n\nfunction confirm_link(confirmLink,callback){\n    testLogging(\"clickable link:\",confirmLink);\n    const doiConfirmlinkResult = getHttpGET(confirmLink,'');\n    try{\n    chai.expect(doiConfirmlinkResult.content).to.have.string('ANMELDUNG ERFOLGREICH');\n    chai.expect(doiConfirmlinkResult.content).to.have.string('Vielen Dank fÃ¼r Ihre Anmeldung');\n    chai.expect(doiConfirmlinkResult.content).to.have.string('Ihre Anmeldung war erfolgreich.');\n    chai.assert.equal(200, doiConfirmlinkResult.statusCode);\n    callback(null,true);\n    }\n    catch(e){\n        callback(e,null);\n    }\n\n}\n\nexport function verifyDOI(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log ){\n    const syncFunc = Meteor.wrapAsync(verify_doi);\n    return syncFunc(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log );\n}\n\n\nasync function verify_doi(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log, callback){\n    let our_recipient_mail =recipient_mail;\n    if(Array.isArray(recipient_mail)){\n        our_recipient_mail=recipient_mail[0];\n    }\n    const urlVerify = dAppUrl+'/api/v1/opt-in/verify';\n    const recipient_public_key = Recipients.findOne({email: our_recipient_mail}).publicKey;\n    let resultVerify ={};\n    let statusVerify ={};\n\n    const dataVerify = {\n        recipient_mail: our_recipient_mail,\n        sender_mail: sender_mail,\n        name_id: nameId,\n        recipient_public_key: recipient_public_key\n    };\n\n    const headersVerify = {\n        'Content-Type':'application/json',\n        'X-User-Id':dAppUrlAuth.userId,\n        'X-Auth-Token':dAppUrlAuth.authToken\n    };\n    let running = true;\n    let counter = 0;\n\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get email from bobs mailbox\n            try{\n                testLogging('Step 5: verifying opt-in:', {data:dataVerify});\n                const realdataVerify = { data: dataVerify, headers: headersVerify };\n                resultVerify = getHttpGETdata(urlVerify, realdataVerify);\n                testLogging('result /opt-in/verify:',{status:resultVerify.data.status,val:resultVerify.data.data.val} );\n                statusVerify = resultVerify.statusCode;\n                if(resultVerify.data.data.val===true) running = false;\n\n            }catch(ex) {\n                testLogging('trying to verify opt-in - so far no success:',ex);\n                //generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n                //await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n            finally{\n                generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n                await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n        }\n\n    })();\n        try{\n        chai.assert.equal(statusVerify,200);\n        chai.assert.equal(resultVerify.data.data.val,true);\n        chai.assert.isBelow(counter,50);\n        callback(null,true);\n        }\n        catch(error){\n        callback(error,false);\n        }\n}\n\nexport function createUser(url,auth,username,templateURL,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    }\n    const mailTemplate = {\n        \"subject\": \"Hello i am \"+username,\n        \"redirect\": \"https://www.doichain.org/vielen-dank/\",\n        \"returnPath\":  username+\"-test@doichain.org\",\n        \"templateURL\": templateURL\n    }\n    const urlUsers = url+'/api/v1/users';\n    const dataUser = {\"username\":username,\"email\":username+\"-test@doichain.org\",\"password\":\"password\",\"mailTemplate\":mailTemplate}\n\n    const realDataUser= { data: dataUser, headers: headersUser};\n    if(log) testLogging('createUser:', realDataUser);\n    let res = getHttpPOST(urlUsers,realDataUser);\n    if(log) testLogging(\"response\",res);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    return res.data.data.userid;\n}\n\nexport function findUser(userId){\n    const res = Accounts.users.findOne({_id:userId});\n    chai.expect(res).to.not.be.undefined;\n    return res;\n}\n\nexport function findOptIn(optInId,log){\n    const res = OptInsCollection.findOne({_id:optInId});\n    if(log)testLogging(res,optInId);\n    chai.expect(res).to.not.be.undefined;\n    return res;\n}\n\nexport function exportOptIns(url,auth,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    };\n\n    const urlExport = url+'/api/v1/export';\n    const realDataUser= {headers: headersUser};\n    let res = getHttpGETdata(urlExport,realDataUser);\n    if(log) testLogging(res,log);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    return res.data.data;\n}\n\n\nexport function requestConfirmVerifyBasicDoi(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,dappUrlBob,recipient_mail,sender_mail,optionalData,recipient_pop3username, recipient_pop3password, log) {\n    const syncFunc = Meteor.wrapAsync(request_confirm_verify_basic_doi);\n    return syncFunc(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,dappUrlBob, recipient_mail,sender_mail,optionalData,recipient_pop3username, recipient_pop3password, log);\n}\n\n\nasync function request_confirm_verify_basic_doi(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,\n                                                dappUrlBob, recipient_mail,sender_mail_in,optionalData,recipient_pop3username, recipient_pop3password, log, callback) {\n    if(log) testLogging('node_url_alice',node_url_alice);\n    if(log) testLogging('rpcAuthAlice',rpcAuthAlice);\n    if(log) testLogging('dappUrlAlice',dappUrlAlice);\n    if(log) testLogging('dataLoginAlice',dataLoginAlice);\n    if(log) testLogging('dappUrlBob',dappUrlBob);\n    if(log) testLogging('recipient_mail',recipient_mail);\n    if(log) testLogging('sender_mail_in',sender_mail_in);\n    if(log) testLogging('optionalData',optionalData);\n    if(log) testLogging('recipient_pop3username',recipient_pop3username);\n    if(log) testLogging('recipient_pop3password',recipient_pop3password);\n\n\n    let sender_mail = sender_mail_in;\n    if(log) testLogging('log into alice and request DOI');\n    let resultDataOptInTmp = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, optionalData, true);\n    let resultDataOptIn = resultDataOptInTmp;\n\n    if(Array.isArray(sender_mail_in)){              //Select master doi from senders and result\n        if(log) testLogging('MASTER DOI: ',resultDataOptInTmp[0]);\n        resultDataOptIn = resultDataOptInTmp[0];\n        sender_mail = sender_mail_in[0];\n    }\n\n    //generating a block so transaction gets confirmed and delivered to bob.\n    generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n    let running = true;\n    let counter = 0;\n    let confirmedLink = \"\";\n    confirmedLink = await(async function loop() {\n        while(running && ++counter<50){ //trying 50x to get email from bobs mailbox\n            try{\n                testLogging('step 3: getting email from hostname!',os.hostname());\n                const link2Confirm = fetchConfirmLinkFromPop3Mail((os.hostname()=='regtest')?'mail':'localhost', 110, recipient_pop3username, recipient_pop3password, dappUrlBob, false);\n                testLogging('step 4: confirming link',link2Confirm);\n                if(link2Confirm!=null){running=false;\n                confirmLink(link2Confirm);\n                confirmedLink=link2Confirm;\n                testLogging('confirmed')\n                return link2Confirm;\n                }\n            }catch(ex){\n                testLogging('trying to get email - so far no success:',counter);\n                await new Promise(resolve => setTimeout(resolve, 3000));\n            }\n        }\n\n    })();\n\n   /* if(os.hostname()!=='regtest'){ //if this is a selenium test from outside docker - don't verify DOI here for simplicity\n            testLogging('returning to test without DOI-verification while doing selenium outside docker');\n            callback(null, {status: \"DOI confirmed\"});\n           // return;\n    }else{*/\n        let nameId=null;\n        try{\n            chai.assert.isBelow(counter,50);\n            //confirmLink(confirmedLink);\n            const nameId = getNameIdOfOptInFromRawTx(node_url_alice,rpcAuthAlice,resultDataOptIn.data.id,true);\n            if(log) testLogging('got nameId',nameId);\n            generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n            testLogging('before verification');\n\n            if(Array.isArray(sender_mail_in)){\n                for (let index = 0; index < sender_mail_in.length; index++) {\n                    let tmpId = index==0 ? nameId : nameId+\"-\"+(index); //get nameid of coDOIs based on master\n                    testLogging(\"NameId of coDoi: \",tmpId);\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuthAlice, sender_mail_in[index], recipient_mail, tmpId, true);\n                }\n            }\n            else{\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail, nameId, true); //need to generate two blocks to make block visible on alice\n            }\n            testLogging('after verification');\n            callback(null, {optIn: resultDataOptIn, nameId: nameId});\n        }\n        catch(error){\n            callback(error, {optIn: resultDataOptIn, nameId: nameId});\n        }\n   // }\n\n\n}\n\nexport function updateUser(url,auth,updateId,mailTemplate,log){\n\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    }\n\n    const dataUser = {\"mailTemplate\":mailTemplate};\n    if(log) testLogging('url:', url);\n    const urlUsers = url+'/api/v1/users/'+updateId;\n    const realDataUser= { data: dataUser, headers: headersUser};\n    if(log) testLogging('updateUser:', realDataUser);\n    let res = getHttpPUT(urlUsers,realDataUser);\n    if(log) testLogging(\"response\",res);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    const usDat = Accounts.users.findOne({_id:updateId}).profile.mailTemplate;\n    if(log) testLogging(\"InputTemplate\",dataUser.mailTemplate);\n    if(log) testLogging(\"ResultTemplate\",usDat);\n    chai.expect(usDat).to.not.be.undefined;\n    chai.assert.equal(dataUser.mailTemplate.templateURL,usDat.templateURL);\n    return usDat;\n}\n\nexport function resetUsers(){\n    Accounts.users.remove(\n        {\"username\":\n        {\"$ne\":\"admin\"}\n        }\n    );\n}\n","import {\n    httpPOST as getHttpPOST,\n    testLog as testLogging,\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {chai} from 'meteor/practicalmeteor:chai';\nimport {Meteor} from \"meteor/meteor\";\nconst os = require('os');\nlet sudo = (os.hostname()=='regtest')?'sudo ':''\nconst headers = { 'Content-Type':'text/plain'  };\nconst exec = require('child_process').exec;\n\nexport function initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyBob,log) {            //connect nodes (alice & bob) and generate DOI (only if not connected)\n\n    testLogging(\"importing private key:\"+privKeyBob);\n    importPrivKey(node_url_bob, rpcAuth, privKeyBob, true, log);\n    try {\n        const aliceContainerId = getContainerIdOfName('alice');\n        const statusDocker = JSON.parse(getDockerStatus(aliceContainerId));\n        logBlockchain(\"real balance :\" + statusDocker.balance, (Number(statusDocker.balance) > 0));\n        logBlockchain(\"connections:\" + statusDocker.connections);\n        if (Number(statusDocker.connections) == 0) {\n            isNodeAlive(node_url_alice, rpcAuth, log);\n            isNodeAliveAndConnectedToHost(node_url_bob, rpcAuth, 'alice', log);\n        }\n\n        if (Number(statusDocker.balance) > 0) {\n            logBlockchain(\"enough founding for alice - blockchain already connected\");\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, log);\n            return;\n        }\n    } catch (exception) {\n        logBlockchain(\"connecting blockchain and mining some coins\");\n    }\n    global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, log);\n    generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 210);  //110 blocks to new address! 110 blÃ¶cke *25 coins\n\n}\nfunction wait_to_start_container(startedContainerId,callback){\n    let running = true;\n    let counter = 0;\n\n    //here we make sure bob gets started and connected again in probably all possible sitautions\n    while(running){\n        try{\n            const statusDocker = JSON.parse(getDockerStatus(startedContainerId));\n            testLogging(\"getinfo\",statusDocker);\n            testLogging(\"version:\"+statusDocker.version);\n            testLogging(\"balance:\"+statusDocker.balance);\n            testLogging(\"connections:\"+statusDocker.connections);\n            if(statusDocker.connections===0){\n                doichainAddNode(startedContainerId);\n            }\n            running = false;\n        }\n        catch(error){\n            testLogging(\"statusDocker problem trying to start Bobs node inside docker container:\",error);\n            try{\n                connectDockerBob(startedContainerId);\n            }catch(error2){\n                testLogging(\"could not start bob:\",error2);\n            }\n            if(counter==50)running=false;\n        }\n        counter++;\n    }\n    callback(null, startedContainerId);\n}\n\nfunction delete_options_from_alice_and_bob(callback){\n\n    const containerId = getContainerIdOfName('mongo');\n    testLogging('containerId of mongo:',containerId);\n\n    exec((global.inside_docker?'sudo':'')+ 'docker exec '+containerId+' bash -c \"mongo < /tmp/delete_collections.sh\"', (e, stdout, stderr)=> {\n        testLogging((global.inside_docker?'sudo':'')+'docker exec ',{stderr:stderr,stdout:stdout});\n        callback(stderr, stdout);\n    });\n\n}\n\nexport function isNodeAlive(url, auth, log) {\n    if(log) testLogging('isNodeAlive called to url',url);\n    const dataGetNetworkInfo = {\"jsonrpc\": \"1.0\", \"id\": \"getnetworkinfo\", \"method\": \"getnetworkinfo\", \"params\": []};\n    const realdataGetNetworkInfo = {auth: auth, data: dataGetNetworkInfo, headers: headers};\n    const resultGetNetworkInfo = getHttpPOST(url, realdataGetNetworkInfo);\n    const statusGetNetworkInfo = resultGetNetworkInfo.statusCode;\n    chai.assert.equal(200, statusGetNetworkInfo);\n    if(log)\n        testLogging('resultGetNetworkInfo:',resultGetNetworkInfo); // getnetworkinfo | jq '.localaddresses[0].address'\n}\n\nexport function isNodeAliveAndConnectedToHost(url, auth, host, log) {\n    if(log) testLogging('isNodeAliveAndConnectedToHost called');\n    isNodeAlive(url, auth, log);\n\n    const dataGetNetworkInfo = {\"jsonrpc\": \"1.0\", \"id\":\"addnode\", \"method\": \"addnode\", \"params\": ['alice','onetry'] };\n    const realdataGetNetworkInfo = { auth: auth, data: dataGetNetworkInfo, headers: headers };\n    const resultGetNetworkInfo = getHttpPOST(url, realdataGetNetworkInfo);\n    const statusAddNode = resultGetNetworkInfo.statusCode;\n    if(log) testLogging('addnode:',statusAddNode);\n    chai.assert.equal(200, statusAddNode);\n\n\n    const dataGetPeerInfo = {\"jsonrpc\": \"1.0\", \"id\":\"getpeerinfo\", \"method\": \"getpeerinfo\", \"params\": [] };\n    const realdataGetPeerInfo = { auth: auth, data: dataGetPeerInfo, headers: headers };\n    const resultGetPeerInfo = getHttpPOST(url, realdataGetPeerInfo);\n    const statusGetPeerInfo = resultGetPeerInfo.statusCode;\n    if(log) testLogging('resultGetPeerInfo:',resultGetPeerInfo);\n    chai.assert.equal(200, statusGetPeerInfo);\n    chai.assert.isAbove(resultGetPeerInfo.data.result.length, 0, 'no connection to other nodes! ');\n    //chai.expect(resultGetPeerInfo.data.result).to.have.lengthOf.at.least(1);\n\n}\n\nexport function importPrivKey(url, auth, privKey, rescan, log) {\n        if(log) testLogging('importPrivKey called','');\n        const data_importprivkey = {\"jsonrpc\": \"1.0\", \"id\":\"importprivkey\", \"method\": \"importprivkey\", \"params\": [privKey] };\n        const realdata_importprivkey = { auth: auth, data: data_importprivkey, headers: headers };\n        const result = getHttpPOST(url, realdata_importprivkey);\n        if(log) testLogging('result:',result);\n}\n\nexport function getNewAddress(url, auth, log) {\n\n    if(log) testLogging('getNewAddress called');\n    const dataGetNewAddress = {\"jsonrpc\": \"1.0\", \"id\":\"getnewaddress\", \"method\": \"getnewaddress\", \"params\": [] };\n    const realdataGetNewAddress = { auth: auth, data: dataGetNewAddress, headers: headers };\n    const resultGetNewAddress = getHttpPOST(url, realdataGetNewAddress);\n    const statusOptInGetNewAddress = resultGetNewAddress.statusCode;\n    const newAddress  = resultGetNewAddress.data.result;\n    chai.assert.equal(200, statusOptInGetNewAddress);\n    chai.expect(resultGetNewAddress.data.error).to.be.null;\n    chai.expect(newAddress).to.not.be.null;\n    if(log) testLogging(newAddress);\n    return newAddress;\n}\n\nexport function generatetoaddress(url,auth,toaddress,amount,log){\n    const dataGenerate = {\"jsonrpc\": \"1.0\", \"id\":\"generatetoaddress\", \"method\": \"generatetoaddress\", \"params\": [amount,toaddress] };\n    const headersGenerates = { 'Content-Type':'text/plain'  };\n    const realdataGenerate = { auth: auth, data: dataGenerate, headers: headersGenerates };\n    const resultGenerate = getHttpPOST(url, realdataGenerate);\n    const statusResultGenerate = resultGenerate.statusCode;\n    if(log)testLogging('statusResultGenerate:',statusResultGenerate);\n    chai.assert.equal(200, statusResultGenerate);\n    chai.expect(resultGenerate.data.error).to.be.null;\n    chai.expect(resultGenerate.data.result).to.not.be.null;\n}\n\nexport function getBalance(url,auth,log){\n    const dataGetBalance = {\"jsonrpc\": \"1.0\", \"id\":\"getbalance\", \"method\": \"getbalance\", \"params\": [] };\n    const realdataGetBalance = { auth: auth, data: dataGetBalance, headers: headers };\n    const resultGetBalance = getHttpPOST(url, realdataGetBalance);\n    if(log)testLogging('resultGetBalance:',resultGetBalance.data.result);\n    return resultGetBalance.data.result;\n}\n\nfunction get_container_id_of_name(name,callback) {\n    exec(sudo+'docker ps --filter \"name='+name+'\" | cut -f1 -d\" \" | sed \\'1d\\'', (e, stdout, stderr)=> {\n        if(e!=null){\n            testLogging('cannot find '+name+' node '+stdout,stderr);\n            return null;\n        }\n        const bobsContainerId = stdout.toString().trim(); //.substring(0,stdout.toString().length-1); //remove last char since ins a line break\n        callback(stderr, bobsContainerId);\n    });\n}\n\nfunction stop_docker_bob(callback) {\n    const bobsContainerId = getContainerIdOfName('bob');\n    testLogging('stopping Bob with container-id: '+bobsContainerId);\n    try{\n        exec(sudo+'docker stop '+bobsContainerId, (e, stdout, stderr)=> {\n            testLogging('stopping Bob with container-id: ',{stdout:stdout,stderr:stderr});\n            callback(null, bobsContainerId);\n        });\n    }catch (e) {\n        testLogging('couldnt stop bobs node',e);\n    }\n}\n\nfunction doichain_add_node(containerId,callback) {\n    exec(sudo+'docker exec '+containerId+' doichain-cli addnode alice onetry', (e, stdout, stderr)=> {\n        testLogging('bob '+containerId+' connected? ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction get_docker_status(containerId,callback) {\n    logBlockchain('containerId '+containerId+' running? ');\n    exec(sudo+'docker exec '+containerId+' doichain-cli -getinfo', (e, stdout, stderr)=> {\n        testLogging('containerId '+containerId+' status: ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction start_docker_bob(bobsContainerId,callback) {\n    exec(sudo+'docker start '+bobsContainerId, (e, stdout, stderr)=> {\n        testLogging('started bobs node again: '+bobsContainerId,{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout.toString().trim()); //remove line break from the end\n    });\n}\n\nfunction connect_docker_bob(bobsContainerId, callback) {\n    exec(sudo+'docker exec '+bobsContainerId+' doichaind -regtest -daemon -reindex -addnode=alice', (e, stdout, stderr)=> {\n        testLogging('restarting doichaind on bobs node and connecting with alice: ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction start_3rd_node(callback) {\n    exec(sudo+'docker start 3rd_node', (e, stdout, stderr)=> {\n        testLogging('trying to start 3rd_node',{stdout:stdout,stderr:stderr});\n        if(stderr){\n            exec(sudo+'docker network ls |grep doichain | cut -f9 -d\" \"', (e, stdout, stderr)=> {\n                const network = stdout.toString().substring(0,stdout.toString().length-1);\n                testLogging('connecting 3rd node to docker network: '+network);\n                exec(sudo+'docker run --expose=18332 ' +\n                    '-e REGTEST=true ' +\n                    '-e DOICHAIN_VER=0.16.3.2 ' +\n                    '-e RPC_ALLOW_IP=::/0 ' +\n                    '-e CONNECTION_NODE=alice '+\n                    '-e RPC_PASSWORD=generated-password ' +\n                    '--name=3rd_node '+\n                    '--dns=172.20.0.5  ' +\n                    '--dns=8.8.8.8 ' +\n                    '--dns-search=ci-doichain.org ' +\n                    '--ip=172.20.0.10 ' +\n                    '--network='+network+' -d doichain/core:0.16.3.2', (e, stdout, stderr)=> {\n                    callback(stderr, stdout);\n                });\n            });\n        }else{\n            callback(stderr, stdout);\n        }\n    });\n\n\n}\n\nfunction run_and_wait(runfunction,seconds, callback){\n    Meteor.setTimeout(function () {\n        runfunction();\n        callback(null,true);\n    }, seconds+1000);\n}\n\nexport function waitToStartContainer(containerId) {\n    const syncFunc = Meteor.wrapAsync(wait_to_start_container);\n    return syncFunc(containerId);\n}\n\nexport function deleteOptInsFromAliceAndBob() {\n    const syncFunc = Meteor.wrapAsync(delete_options_from_alice_and_bob);\n    return syncFunc();\n}\n\nexport function start3rdNode() {\n    const syncFunc = Meteor.wrapAsync(start_3rd_node);\n    return syncFunc();\n}\n\nexport function stopDockerBob() {\n    const syncFunc = Meteor.wrapAsync(stop_docker_bob);\n    return syncFunc();\n}\n\nexport function getContainerIdOfName(name) {\n    const syncFunc = Meteor.wrapAsync(get_container_id_of_name);\n    return syncFunc(name);\n}\n\nexport function startDockerBob(containerId) {\n    const syncFunc = Meteor.wrapAsync(start_docker_bob);\n    return syncFunc(containerId);\n}\n\nexport function doichainAddNode(containerId) {\n    const syncFunc = Meteor.wrapAsync(doichain_add_node);\n    return syncFunc(containerId);\n}\n\nexport function getDockerStatus(containerId) {\n    const syncFunc = Meteor.wrapAsync(get_docker_status);\n    return syncFunc(containerId);\n}\n\nexport function connectDockerBob(containerId) {\n    const syncFunc = Meteor.wrapAsync(connect_docker_bob);\n    return syncFunc(containerId);\n}\n\nexport function runAndWait(runfunction, seconds) {\n    const syncFunc = Meteor.wrapAsync(run_and_wait);\n    return syncFunc(seconds);\n}","import {chai} from 'meteor/practicalmeteor:chai';\nimport { testLog } from \"meteor/doichain:doichain-meteor-api\";\nimport {\n    deleteOptInsFromAliceAndBob, getBalance, initBlockchain\n} from \"./test-api/test-api-on-node\";\n\nglobal.inside_docker = false;\n\nconst log = true;\n\nglobal.node_url_alice = 'http://172.20.0.6:18332/';\nif(!global.inside_docker) global.node_url_alice = 'http://localhost:18543/';\nglobal.node_url_bob =   'http://172.20.0.7:18332/';\nif(!global.inside_docker) global.node_url_bob = 'http://localhost:18544/';\nglobal.rpcAuthAlice = \"admin:generated-password\";\nglobal.rpcAuth = \"admin:generated-password\";\n\nconst privKeyBob = \"cP3EigkzsWuyKEmxk8cC6qXYb4ZjwUo5vzvZpAPmDQ83RCgXQruj\";\n\nglobal.dappUrlAlice = \"http://localhost:3000\";\nglobal.dappUrlBob = global.insde_docker?\"http://172.20.0.8:4000\":\"http://localhost:4000\";\nglobal.dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\n\n\n\nif(Meteor.isAppTest) {\n    describe('basic-doi-test-0', function () {\n        this.timeout(0);\n\n        before(function () {\n            testLog(\"removing OptIns,Recipients,Senders\",'');\n            deleteOptInsFromAliceAndBob();\n        });\n\n        it('should create a RegTest Doichain with alice and bob and some Doi - coins', function () {\n            initBlockchain(global.node_url_alice,global.node_url_bob,global.rpcAuth,privKeyBob,true);\n            const aliceBalance = getBalance(global.node_url_alice, global.rpcAuth, log);\n            chai.assert.isAbove(aliceBalance, 0, 'no funding! ');\n        });\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    login,\n    createUser,\n    findUser,\n    exportOptIns,\n    requestConfirmVerifyBasicDoi, resetUsers, updateUser, deleteAllEmailsFromPop3\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {deleteOptInsFromAliceAndBob} from \"./test-api/test-api-on-node\";\n\n\n\nlet templateUrlA=\"http://172.20.0.8:4000/templates/emails/doichain-anmeldung-final-DE.html\";\nlet templateUrlB=\"http://172.20.0.8:4000/templates/emails/doichain-anmeldung-final-EN.html\";\nif(!global.inside_docker){\n    templateUrlA=\"http://localhost:4000/templates/emails/doichain-anmeldung-final-DE.html\";\n    templateUrlB=\"http://localhost:4000/templates/emails/doichain-anmeldung-final-EN.html\";\n}\n\nconst aliceALogin = {\"username\":\"alice-a\",\"password\":\"password\"};\nconst aliceBLogin = {\"username\":\"alice-a\",\"password\":\"password\"};\n\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nconst log = true;\n\nif(Meteor.isAppTest) {\n    describe('basic-doi-test-01', function () {\n        this.timeout(0);\n\n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, true);\n        });\n\n        xit('should test if basic Doichain workflow is working with optional data', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice@ci-doichain.org\";\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, dataLoginAlice, global.dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n\n        xit('should test if basic Doichain workflow is working without optional data', function (done) {\n            const recipient_mail = \"alice@ci-doichain.org\"; //please use this as an alernative when above standard is not possible\n            const sender_mail = \"bob@ci-doichain.org\";\n            //login to dApp & request DOI on alice via bob\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, dataLoginAlice, global.dappUrlBob, recipient_mail, sender_mail, null, \"alice@ci-doichain.org\", \"alice\", true);\n            done();\n        });\n\n        xit('should create two more users', function (done) {\n            resetUsers();\n            const logAdmin = login(global.dappUrlAlice, global.dAppLogin, false);\n            let userA = createUser(global.dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(global.dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            done();\n        });\n\n        xit('should test if Doichain workflow is using different templates for different users', function (done) {\n\n            resetUsers();\n            const recipient_mail = \"bob@ci-doichain.org\"; //\n            const sender_mail_alice_a = \"alice-a@ci-doichain.org\";\n            const sender_mail_alice_b = \"alice-b@ci-doichain.org\";\n            const logAdmin = login(global.dappUrlAlice, global.dAppLogin, false);\n\n            let userA = createUser(global.dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(global.dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            const logUserA = login(global.dappUrlAlice, aliceALogin, true);\n            const logUserB = login(global.dappUrlAlice, aliceBLogin, true);\n\n            //requestConfirmVerifyBasicDoi checks if the \"log\" value (if it is a String) is in the mail-text\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice,global.dappUrlAlice, logUserA, global.dappUrlBob, recipient_mail, sender_mail_alice_a, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", \"kostenlose Anmeldung\");\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logUserB, global.dappUrlBob, recipient_mail, sender_mail_alice_b, {'city': 'Simbach'}, \"bob@ci-doichain.org\", \"bob\", \"free registration\");\n\n            done();\n        });\n\n        it('should test if users can export OptIns ', function (done) {\n            resetUsers();\n\n            const logAdmin = login(global.dappUrlAlice, global.dAppLogin, false);\n            let userA = createUser(global.dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(global.dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            const recipient_mail = \"bob@ci-doichain.org\"; //\n            const sender_mail_alice_a = \"alice-export@ci-doichain.org\";\n            const logUserA = login(global.dappUrlAlice, aliceALogin, log);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logUserA, global.dappUrlBob, recipient_mail, sender_mail_alice_a, {'city': 'MÃ¼nchen'}, \"bob@ci-doichain.org\", \"bob\", true);\n            const exportedOptIns = exportOptIns(global.dappUrlAlice, logAdmin, log);\n            if(log) logBlockchain('exportedOptIns:',exportedOptIns);\n            chai.expect(exportedOptIns).to.not.be.undefined;\n            chai.expect(exportedOptIns[0]).to.not.be.undefined;\n            const exportedOptInsA = exportOptIns(global.dappUrlAlice, logUserA, log);\n            if(log)logBlockchain('exportedOptInsA:',exportedOptInsA);\n            exportedOptInsA.forEach(element => {\n                chai.expect(element.ownerId).to.be.equal(logUserA.userId);\n            });\n            //chai.expect(findOptIn(resultDataOptIn._id)).to.not.be.undefined;\n            done();\n        });\n\n        xit('should test if admin can update user profiles', function () {\n            resetUsers();\n            let logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            const userUp = createUser(global.dappUrlAlice, logAdmin, \"updateUser\", templateUrlA, true);\n            logBlockchain('createUser:',userUp);\n            const changedData = updateUser(global.dappUrlAlice, logAdmin, userUp, {\"templateURL\": templateUrlB}, true);\n            logBlockchain('changedData:',changedData);\n            chai.expect(changedData).not.undefined;\n        });\n\n        xit('should test if user can update own profile', function () {\n            resetUsers();\n            let logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            const userUp = createUser(global.dappUrlAlice, logAdmin, \"updateUser\", templateUrlA, true);\n            //logBlockchain('should test if user can update own profile:userUp:',userUp);\n            const logUserUp = login(global.dappUrlAlice, {\"username\": \"updateUser\", \"password\": \"password\"}, true);\n            //logBlockchain('should test if user can update own profile:logUserUp:',logUserUp);\n            const changedData = updateUser(global.dappUrlAlice, logUserUp, userUp, {\"templateURL\": templateUrlB}, true);\n            chai.expect(changedData).not.undefined;\n        });\n\n        xit('should test if coDoi works', function () {\n            const coDoiList = [\"alice1@doichain-ci.com\", \"alice2@doichain-ci.com\", \"alice3@doichain-ci.com\"];\n            const recipient_mail = \"bob@ci-doichain.org\";\n            const sender_mail = coDoiList;\n            let logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logAdmin, global.dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n        });\n\n        xit('should find updated Data in email', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice-update@ci-doichain.org\";\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {\"subject\": \"updateTest\", \"templateURL\": templateUrlB});\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, adLog, global.dappUrlBob, recipient_mail, sender_mail,\n                {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n\n        it('should redirect if confirmation-link is clicked again',function(){\n            for (let index = 0; index < 3; index++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\"+index+\"@ci-doichain.org\";\n                const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n                let returnedData = requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n                chai.assert.equal(true,confirmLink(returnedData.confirmLink));\n            }\n\n        });\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    confirmLink, deleteAllEmailsFromPop3,\n    fetchConfirmLinkFromPop3Mail,\n    getNameIdOfOptInFromRawTx,\n    login,\n    requestDOI, verifyDOI\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as testLogging\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {\n    deleteOptInsFromAliceAndBob,\n    generatetoaddress,\n    getNewAddress,\n    start3rdNode,\n    startDockerBob,\n    stopDockerBob, waitToStartContainer\n} from \"./test-api/test-api-on-node\";\nconst exec = require('child_process').exec;\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nconst rpcAuth = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\nconst log = true;\n\nif(Meteor.isAppTest) {\n    describe('02-basic-doi-test-with-offline-node-02', function () {\n\n        before(function () {\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n            exec('sudo docker rm 3rd_node', (e, stdout2, stderr2) => {\n                testLogging('deleted 3rd_node:', {stdout: stdout2, stderr: stderr2});\n            });\n\n            try {\n                exec('sudo docker stop 3rd_node', (e, stdout, stderr) => {\n                    testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                    exec('sudo docker rm 3rd_node', (e, stdout, stderr) => {\n                        testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                    });\n                });\n            } catch (ex) {\n                testLogging('could not stop 3rd_node',);\n            }\n            //importPrivKey(node_url_bob, rpcAuth, privKeyBob, true, false);\n        });\n\n        before(function () {\n            try {\n                exec('sudo docker stop 3rd_node', (e, stdout, stderr) => {\n                    testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                    exec('sudo docker rm 3rd_node', (e, stdout, stderr) => {\n                        testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                    });\n                });\n            } catch (ex) {\n                testLogging('could not stop 3rd_node',);\n            }\n        });\n\n        it('should test if basic Doichain workflow is working when Bobs node is temporarily offline', function (done) {\n            this.timeout(0);\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, false);\n            //start another 3rd node before shutdown Bob\n            start3rdNode();\n            var containerId = stopDockerBob();\n            const recipient_mail = \"bob@ci-doichain.org\";\n            const sender_mail = \"alice-to-offline-node@ci-doichain.org\";\n            //login to dApp & request DOI on alice via bob\n            if (log) testLogging('log into alice and request DOI');\n            let dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            let resultDataOptIn = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n\n            const nameId = getNameIdOfOptInFromRawTx(node_url_alice, rpcAuth, resultDataOptIn.data.id, true);\n            if (log) testLogging('got nameId', nameId);\n            var startedContainerId = startDockerBob(containerId);\n            testLogging(\"started bob's node with containerId\", startedContainerId);\n            chai.expect(startedContainerId).to.not.be.null;\n            waitToStartContainer(startedContainerId);\n\n            //generating a block so transaction gets confirmed and delivered to bob.\n            generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n            let running = true;\n            let counter = 0;\n            (async function loop() {\n                while (running && ++counter < 50) { //trying 50x to get email from bobs mailbox\n                    try {\n                        //  generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n                        testLogging('step 3: getting email!');\n                        const link2Confirm = fetchConfirmLinkFromPop3Mail(\"mail\", 110, recipient_pop3username, recipient_pop3password, dappUrlBob, false);\n                        testLogging('step 4: confirming link', link2Confirm);\n                        if (link2Confirm != null) running = false;\n                        confirmLink(link2Confirm);\n                        testLogging('confirmed');\n                    } catch (ex) {\n                        testLogging('trying to get email - so far no success:', counter);\n                        await new Promise(resolve => setTimeout(resolve, 2000));\n                    }\n                }\n                })();\n                generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuth, sender_mail, recipient_mail, nameId, log); //need to generate two blocks to make block visible on alice\n                testLogging('end of getNameIdOfRawTransaction returning nameId', nameId);\n                try {\n                    exec('sudo docker stop 3rd_node', (e, stdout, stderr) => {\n                        testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                        exec('sudo docker rm 3rd_node', (e, stdout, stderr) => {\n                            testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                        });\n                    });\n                } catch (ex) {\n                    testLogging('could not stop 3rd_node',);\n                }\n                done();\n            //done();\n        }); //it\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    deleteAllEmailsFromPop3, findOptIn,\n    login,\n    requestConfirmVerifyBasicDoi, requestDOI\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {deleteOptInsFromAliceAndBob, generatetoaddress, getNewAddress} from \"./test-api/test-api-on-node\";\n\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst rpcAuthAlice = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nif(Meteor.isAppTest) {\n    describe('03-basic-doi-test-03', function () {\n\n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n        });\n\n        it('should test if basic Doichain workflow running 5 times', function (done) {\n            this.timeout(0);\n\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuthAlice, false);\n            for (let i = 0; i < 20; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg_' + i}, \"bob@ci-doichain.org\", \"bob\", true);\n            }\n            done();\n        });\n\n        it('should test if basic Doichain workflow running 20 times without confirmation and verification', function (done) {\n            this.timeout(0);\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuthAlice, false);\n            for (let i = 0; i < 20; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                const resultDataOptIn = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n                chai.expect(findOptIn(resultDataOptIn.data.id, true)).to.not.be.undefined;\n            }\n            done();\n        });\n\n        it('should test if basic Doichain workflow running 100 times with without confirmation and verification', function (done) {\n            this.timeout(0);\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuthAlice, false);\n            for (let i = 0; i < 100; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                const resultDataOptIn = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n                chai.expect(findOptIn(resultDataOptIn.data.id, true)).to.not.be.undefined;\n                if (i % 100 === 0) generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n            }\n            done();\n        });\n    });\n}","if(Meteor.isAppTest || Meteor.isTest) {\n\n    xdescribe('simple-selenium-test', function () {\n\n        this.timeout(10000);\n        beforeEach(function () {\n\n        });\n\n\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {deleteOptInsFromAliceAndBob, getBalance, initBlockchain} from \"./test-api/test-api-on-node\";\nimport {login, requestConfirmVerifyBasicDoi} from \"./test-api/test-api-on-dapp\";\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst node_url_bob =   'http://172.20.0.7:18332/';\nconst rpcAuth = \"admin:generated-password\";\nconst privKeyBob = \"cP3EigkzsWuyKEmxk8cC6qXYb4ZjwUo5vzvZpAPmDQ83RCgXQruj\";\nconst log = true;\n\n\nconst rpcAuthAlice = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\n\n\nif(Meteor.isTest || Meteor.isAppTest) {\n\n    xdescribe('basic-doi-test-nico', function () {\n        this.timeout(600000);\n\n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n        });\n\n        xit('should create a RegTest Doichain with alice and bob and some Doi - coins', function () {\n            initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyBob,true);\n            const aliceBalance = getBalance(node_url_alice, rpcAuth, log);\n            chai.assert.isAbove(aliceBalance, 0, 'no funding! ');\n        });\n\n        xit('should test if basic Doichain workflow is working with optional data', function (done) {\n            const recipient_mail = \"bob+1@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice@ci-doichain.org\";\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n    });\n\n    xdescribe('basic-doi-test-nico', function () {\n\n\n        /**\n         * Information regarding to event loop node.js\n         * - https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/\n         *\n         * Promises:\n         * - https://developers.google.com/web/fundamentals/primers/promises\n         *\n         * Promise loops and async wait\n         * - https://stackoverflow.com/questions/40328932/javascript-es6-promise-for-loop\n         *\n         * Asynchronous loops with mocha:\n         * - https://whitfin.io/asynchronous-test-loops-with-mocha/\n         */\n        /*  it('should test a timeout with a promise', function (done) {\n              logBlockchain(\"truying a promise\");\n              for (let i = 0; i < 10; i++) {\n                  const promise = new Promise((resolve, reject) => {\n                      const timeout = Math.random() * 1000;\n                      setTimeout(() => {\n                          console.log('promise:'+i);\n                      }, timeout);\n                  });\n                  // TODO: Chain this promise to the previous one (maybe without having it running?)\n              }\n              done();\n          });\n\n          it('should run a loop with async wait', function (done) {\n              logBlockchain(\"trying asycn wait\");\n              (async function loop() {\n                  for (let i = 0; i < 10; i++) {\n                      await new Promise(resolve => setTimeout(resolve, Math.random() * 1000));\n                      console.log('async wait'+i);\n                  }\n                  done()\n              })();\n          });\n\n          xit('should safely stop and start bobs doichain node container', function (done) {\n              var containerId = stopDockerBob();\n\n              logBlockchain(\"stopped bob's node with containerId\",containerId);\n              chai.expect(containerId).to.not.be.null;\n\n              var startedContainerId = startDockerBob(containerId);\n              logBlockchain(\"started bob's node with containerId\",startedContainerId);\n              chai.expect(startedContainerId).to.not.be.null;\n\n              let running = true;\n              while(running){\n                  runAndWait(function () {\n                      try{\n                          const statusDocker = JSON.parse(getDockerStatus(containerId));\n                          logBlockchain(\"getinfo\",statusDocker);\n                          logBlockchain(\"version:\"+statusDocker.version);\n                          logBlockchain(\"balance:\"+statusDocker.balance);\n                          logBlockchain(\"balance:\"+statusDocker.connections);\n                          if(statusDocker.connections===0){\n                              doichainAddNode(containerId);\n                          }\n                          running = false;\n                      }\n                      catch(error){\n                          logBlockchain(\"statusDocker problem:\",error);\n                      }\n                  },2);\n              }\n\n              done();\n          });*/\n    });\n}","import {chai} from 'meteor/practicalmeteor:chai';\nif(Meteor.isTest) {\n\n    xdescribe('basic-doi-test-flo', function () {\n    });\n}\n\n\n","Meteor.publish('users.user', function () {\n  if (this.userId) {\n    return Meteor.users.find({\n      _id: this.userId\n    }, {\n      fields: {\n        'emails': 1,\n        'profile': 1,\n        'services': 1\n      }\n    })\n  } else {\n    return this.ready()\n  }\n})\n"]}