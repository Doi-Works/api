{"version":3,"sources":["meteor://ðŸ’»app/server/test/test-api/test-api-on-dapp.js","meteor://ðŸ’»app/server/test/test-api/test-api-on-node.js","meteor://ðŸ’»app/server/test/0-basic-doi-tests.0.js","meteor://ðŸ’»app/server/test/1-basic-doi-test.1.js","meteor://ðŸ’»app/server/test/2-basic-doi-test.2.js","meteor://ðŸ’»app/server/test/3-basic-doi-test.3.js","meteor://ðŸ’»app/server/test/5-selenium-test-flo.js","meteor://ðŸ’»app/server/test/basic-doi-test-nico.js","meteor://ðŸ’»app/server/test/basic-doi-test.flo.js"],"names":["module","export","login","requestDOI","getNameIdOfRawTransaction","getNameIdOfOptInFromRawTx","fetchConfirmLinkFromPop3Mail","deleteAllEmailsFromPop3","confirmLink","verifyDOI","createUser","findUser","findOptIn","exportOptIns","requestConfirmVerifyBasicDoi","updateUser","resetUsers","Meteor","link","v","chai","quotedPrintableDecode","AssertionError","OptInsCollection","Recipients","getHttpGET","getHttpGETdata","getHttpPOST","testLogging","RecipientsCollection","httpGET","httpGETdata","httpPOST","testLog","generatetoaddress","headers","os","require","POP3Client","url","paramsLogin","log","urlLogin","headersLogin","realDataLogin","params","result","statusCode","dataLogin","data","statusLogin","status","assert","equal","auth","recipient_mail","sender_mail","urlOptIn","dataOptIn","JSON","stringify","headersOptIn","userId","authToken","realDataOptIn","resultOptIn","Array","isArray","forEach","element","txId","syncFunc","wrapAsync","get_nameid_of_raw_transaction","callback","nameId","running","counter","loop","dataGetRawTransaction","realdataGetRawTransaction","resultGetRawTransaction","vout","scriptPubKey","nameOp","undefined","name","txid","ex","Promise","resolve","setTimeout","optInId","get_nameid_of_optin_from_rawtx","our_optIn","findOne","_id","Error","error","hostname","port","username","password","alicedapp_url","fetch_confirm_link_from_pop3_mail","client","tlserrs","enabletls","debug","on","rawdata","list","msgcount","msgnumber","err","rset","retr","maildata","html","replaceAll","expect","indexOf","to","not","linkdata","substring","be","null","requestData","dele","quit","end","str","find","replace","RegExp","delete_all_emails_from_pop3","i","doiConfirmlinkResult","content","have","string","dAppUrl","dAppUrlAuth","node_url_alice","rpcAuthAlice","verify_doi","our_recipient_mail","urlVerify","recipient_public_key","email","publicKey","resultVerify","statusVerify","dataVerify","name_id","headersVerify","realdataVerify","val","global","aliceAddress","templateURL","headersUser","mailTemplate","urlUsers","dataUser","realDataUser","res","userid","Accounts","users","urlExport","dappUrlAlice","dataLoginAlice","dappUrlBob","optionalData","recipient_pop3username","recipient_pop3password","request_confirm_verify_basic_doi","sender_mail_in","resultDataOptInTmp","resultDataOptIn","link2Confirm","id","index","length","tmpId","optIn","updateId","HTTP","put","usDat","profile","remove","initBlockchain","isNodeAlive","isNodeAliveAndConnectedToHost","importPrivKey","getNewAddress","getBalance","waitToStartContainer","deleteOptInsFromAliceAndBob","start3rdNode","stopDockerBob","getContainerIdOfName","startDockerBob","doichainAddNode","getDockerStatus","connectDockerBob","runAndWait","logBlockchain","sudo","exec","node_url_bob","rpcAuth","privKeyBob","aliceContainerId","statusDocker","parse","balance","Number","connections","exception","wait_to_start_container","startedContainerId","version","error2","delete_options_from_alice_and_bob","containerId","e","stdout","stderr","dataGetNetworkInfo","realdataGetNetworkInfo","resultGetNetworkInfo","statusGetNetworkInfo","host","statusAddNode","dataGetPeerInfo","realdataGetPeerInfo","resultGetPeerInfo","statusGetPeerInfo","isAbove","privKey","rescan","data_importprivkey","realdata_importprivkey","dataGetNewAddress","realdataGetNewAddress","resultGetNewAddress","statusOptInGetNewAddress","newAddress","toaddress","amount","dataGenerate","headersGenerates","realdataGenerate","resultGenerate","statusResultGenerate","dataGetBalance","realdataGetBalance","resultGetBalance","get_container_id_of_name","bobsContainerId","toString","trim","stop_docker_bob","doichain_add_node","get_docker_status","start_docker_bob","connect_docker_bob","start_3rd_node","network","run_and_wait","runfunction","seconds","isAppTest","describe","timeout","before","it","aliceBalance","dAppLogin","templateUrlA","templateUrlB","aliceALogin","aliceBLogin","done","logAdmin","userA","userB","sender_mail_alice_a","sender_mail_alice_b","logUserA","logUserB","exportedOptIns","exportedOptInsA","ownerId","userUp","changedData","logUserUp","coDoiList","coDois","adLog","stdout2","stderr2","isTest","beforeEach","xit","xdescribe"],"mappings":"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","file":"/app.js","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport {chai} from 'meteor/practicalmeteor:chai';\nimport {quotedPrintableDecode} from \"emailjs-mime-codec\";\nimport { AssertionError } from \"assert\";\nimport {\n    OptInsCollection,\n    RecipientsCollection as Recipients,\n    httpGET as getHttpGET,\n    httpGETdata as getHttpGETdata,\n    httpPOST as getHttpPOST,\n    testLog as testLogging\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {generatetoaddress} from \"./test-api-on-node\";\n\nconst headers = { 'Content-Type':'text/plain'  };\nconst os = require('os');\nvar POP3Client = require(\"poplib\");\n\nexport function login(url, paramsLogin, log) {\n    if(log) testLogging('dApp login.');\n\n    const urlLogin = url+'/api/v1/login';\n    const headersLogin = [{'Content-Type':'application/json'}];\n    const realDataLogin= { params: paramsLogin, headers: headersLogin };\n\n    const result = getHttpPOST(urlLogin, realDataLogin);\n\n    if(log) testLogging('result login:',result);\n    const statusCode = result.statusCode;\n    const dataLogin = result.data;\n\n    const statusLogin = dataLogin.status;\n    chai.assert.equal(200, statusCode);\n    chai.assert.equal('success', statusLogin);\n    return dataLogin.data;\n}\n\nexport function requestDOI(url, auth, recipient_mail, sender_mail, data,  log) {\n    if(log) testLogging('step 1 - requestDOI called via REST');\n\n    const urlOptIn = url+'/api/v1/opt-in';\n    let dataOptIn = {};\n\n    if(data){\n        dataOptIn = {\n            \"recipient_mail\":recipient_mail,\n            \"sender_mail\":sender_mail,\n            \"data\":JSON.stringify(data)\n        }\n    }else{\n        dataOptIn = {\n            \"recipient_mail\":recipient_mail,\n            \"sender_mail\":sender_mail\n        }\n    }\n\n    const headersOptIn = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    };\n\n    const realDataOptIn = { data: dataOptIn, headers: headersOptIn};\n    const resultOptIn = getHttpPOST(urlOptIn, realDataOptIn);\n\n    //logBlockchain(\"resultOptIn\",resultOptIn);\n    chai.assert.equal(200, resultOptIn.statusCode);\n    testLogging(\"RETURNED VALUES: \",resultOptIn);\n    if(Array.isArray(resultOptIn.data)){\n        testLogging('adding coDOIs');\n        resultOptIn.data.forEach(element => {\n            chai.assert.equal('success', element.status);\n        });\n    }\n\n    else{\n        testLogging('adding DOI');\n    chai.assert.equal('success',  resultOptIn.data.status);\n    }\n    return resultOptIn.data;\n}\n\nexport function getNameIdOfRawTransaction(url, auth, txId) {\n    testLogging('pre-start of getNameIdOfRawTransaction',txId);\n    const syncFunc = Meteor.wrapAsync(get_nameid_of_raw_transaction);\n    return syncFunc(url, auth, txId);\n}\n\nfunction get_nameid_of_raw_transaction(url, auth, txId, callback){\n\n    let nameId = '';\n    let running = true;\n    let counter = 0;\n    testLogging('start getNameIdOfRawTransaction',txId);\n    (async function loop() {\n        while(running && ++counter<1500){ //trying 50x to get email from bobs mailbox\n            try{\n                    testLogging('trying to get transaction',txId);\n                    const dataGetRawTransaction = {\"jsonrpc\": \"1.0\", \"id\":\"getrawtransaction\", \"method\": \"getrawtransaction\", \"params\": [txId,1] };\n                    const realdataGetRawTransaction = { auth: auth, data: dataGetRawTransaction, headers: headers };\n                    const resultGetRawTransaction = getHttpPOST(url, realdataGetRawTransaction);\n\n                    if(resultGetRawTransaction.data.result.vout[1].scriptPubKey.nameOp!==undefined){\n                        nameId = resultGetRawTransaction.data.result.vout[1].scriptPubKey.nameOp.name;\n                    }\n                    else{\n                        nameId = resultGetRawTransaction.data.result.vout[0].scriptPubKey.nameOp.name;\n                    }\n\n                    if(resultGetRawTransaction.data.result.txid!==undefined){\n                        testLogging('confirmed txid:'+resultGetRawTransaction.data.result.txid);\n                        running=false;\n                    }\n                    //chai.assert.equal(txId, resultGetRawTransaction.data.result.txid);\n            }catch(ex){\n                testLogging('trying to get email - so far no success:',counter);\n                await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n        }\n        testLogging('end of getNameIdOfRawTransaction returning nameId',nameId);\n        callback(null,nameId);\n    })();\n}\n\nexport function getNameIdOfOptInFromRawTx(url, auth, optInId,log) {\n    const syncFunc = Meteor.wrapAsync(get_nameid_of_optin_from_rawtx);\n    return syncFunc(url, auth, optInId,log);\n}\n\n\nasync function get_nameid_of_optin_from_rawtx(url, auth, optInId, log, callback){\n    testLogging('step 2 - getting nameId of raw transaction from blockchain');\n    if(log) testLogging('the txId will be added a bit later as soon as the schedule picks up the job and inserts it into the blockchain. it does not happen immediately. waiting...');\n    let running = true;\n    let counter = 0;\n    let our_optIn = null;\n    let nameId = null;\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get opt-in\n\n            testLogging('find opt-In',optInId);\n            our_optIn = OptInsCollection.findOne({_id: optInId});\n            if(our_optIn.txId!==undefined){\n                testLogging('found txId of opt-In',our_optIn.txId);\n                running = false;\n            }\n            else{\n                testLogging('did not find txId yet for opt-In-Id',our_optIn._id);\n            }\n\n            await new Promise(resolve => setTimeout(resolve, 3000));\n        }\n    })();\n\n    try{\n\n        if(our_optIn._id != optInId) throw new Error(\"OptInId wrong\",our_optIn._id,optInId);\n        if(log) testLogging('optIn:',our_optIn);\n        nameId = getNameIdOfRawTransaction(url,auth,our_optIn.txId);\n        if(\"e/\"+our_optIn.nameId != nameId) throw new AssertionError(\"NameId wrong\",\"e/\"+our_optIn.nameId,nameId);\n\n        if(log) testLogging('nameId:',nameId);\n        if(nameId == null) throw new Error(\"NameId null\");\n        if(counter >= 50) throw new Error(\"OptIn not found after retries\");\n        callback(null,nameId);\n    }\n    catch(error){\n        callback(error,nameId);\n    }\n}\n\nexport function fetchConfirmLinkFromPop3Mail(hostname,port,username,password,alicedapp_url,log) {\n    const syncFunc = Meteor.wrapAsync(fetch_confirm_link_from_pop3_mail);\n    return syncFunc(hostname,port,username,password,alicedapp_url,log);\n}\n\nfunction fetch_confirm_link_from_pop3_mail(hostname,port,username,password,alicedapp_url,log,callback) {\n\n    testLogging(\"step 3 - getting email from bobs inbox\");\n    //https://github.com/ditesh/node-poplib/blob/master/demos/retrieve-all.js\n    var client = new POP3Client(port, hostname, {\n        tlserrs: false,\n        enabletls: false,\n        debug: false\n    });\n\n    client.on(\"connect\", function() {\n        testLogging(\"CONNECT success\");\n        client.login(username, password);\n        client.on(\"login\", function(status, rawdata) {\n            if (status) {\n                testLogging(\"LOGIN/PASS success\");\n                client.list();\n\n                client.on(\"list\", function(status, msgcount, msgnumber, data, rawdata) {\n\n                    if (status === false) {\n                        const err = \"LIST failed\"+ msgnumber;\n                        client.rset();\n                        callback(err, null);\n                        return;\n                    } else {\n                        if(log) testLogging(\"LIST success with \" + msgcount + \" element(s)\",'');\n\n                        //chai.expect(msgcount).to.be.above(0, 'no email in bobs inbox');\n                        if (msgcount > 0){\n                            client.retr(1);\n                            client.on(\"retr\", function(status, msgnumber, maildata, rawdata) {\n\n                                if (status === true) {\n                                    if(log) testLogging(\"RETR success \" + msgnumber);\n\n                                    //https://github.com/emailjs/emailjs-mime-codec\n                                    let html  = quotedPrintableDecode(maildata);\n                                    if(os.hostname()!=='regtest'){ //this is probably a selenium test from outside docker  - so replace URL so it can be confirmed\n                                            html = replaceAll(html,'http://172.20.0.8','http://localhost');  //TODO put this IP inside a config\n                                    }\n                                    chai.expect(html.indexOf(alicedapp_url)).to.not.equal(-1);\n                                    const linkdata =  html.substring(html.indexOf(alicedapp_url),html.indexOf(\"'\",html.indexOf(alicedapp_url)));\n\n                                    chai.expect(linkdata).to.not.be.null;\n                                    if(log && !(log===true))chai.expect(html.indexOf(log)).to.not.equal(-1);\n                                    const requestData = {\"linkdata\":linkdata,\"html\":html}\n\n                                    client.dele(msgnumber);\n                                    client.on(\"dele\", function(status, msgnumber, data, rawdata) {\n                                        client.quit();\n\n                                        client.end();\n                                        client = null;\n                                        callback(null,linkdata);\n                                    });\n\n                                } else {\n                                    const err = \"RETR failed for msgnumber \"+ msgnumber;\n                                    client.rset();\n                                    client.end();\n                                    client = null;\n                                    callback(err, null);\n                                    return;\n                                }\n                            });\n                        }\n                        else{\n                            const err = \"empty mailbox\";\n                            callback(err, null);\n                            client.quit();\n                            client.end();\n                            client = null;\n                            return;\n                        }\n                    }\n                });\n\n            } else {\n                const err = \"LOGIN/PASS failed\";\n                callback(err, null);\n                client.quit();\n                client.end();\n                client = null;\n                return;\n            }\n        });\n    });\n}\n\nfunction replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\nexport function deleteAllEmailsFromPop3(hostname,port,username,password,log) {\n    const syncFunc = Meteor.wrapAsync(delete_all_emails_from_pop3);\n    return syncFunc(hostname,port,username,password,log);\n}\n\nfunction delete_all_emails_from_pop3(hostname,port,username,password,log,callback) {\n\n    testLogging(\"deleting all emails from bobs inbox\");\n    //https://github.com/ditesh/node-poplib/blob/master/demos/retrieve-all.js\n    var client = new POP3Client(port, hostname, {\n        tlserrs: false,\n        enabletls: false,\n        debug: false\n    });\n\n    client.on(\"connect\", function() {\n        testLogging(\"CONNECT success\");\n        client.login(username, password);\n        client.on(\"login\", function(status, rawdata) {\n            if (status) {\n                testLogging(\"LOGIN/PASS success\");\n                client.list();\n\n                client.on(\"list\", function(status, msgcount, msgnumber, data, rawdata) {\n\n                    if (status === false) {\n                        const err = \"LIST failed\"+ msgnumber;\n                        client.rset();\n                        callback(err, null);\n                        return;\n                    } else {\n                        if(log) testLogging(\"LIST success with \" + msgcount + \" element(s)\",'');\n\n                        //chai.expect(msgcount).to.be.above(0, 'no email in bobs inbox');\n                        if (msgcount > 0){\n                            for(let i = 0;i<=msgcount;i++){\n                                client.dele(i+1);\n                                client.on(\"dele\", function(status, msgnumber, data, rawdata) {\n                                    testLogging(\"deleted email\"+(i+1)+\" status:\"+status);\n                                   if(i==msgcount-1){\n                                       client.quit();\n\n                                       client.end();\n                                       client = null;\n                                       if(log) testLogging(\"all emails deleted\");\n                                       callback(null,'all emails deleted');\n                                   }\n                                });\n                            }\n                        }\n                        else{\n                            const err = \"empty mailbox\";\n                            callback(null, err); //we do not send an error here when inbox is empty\n                            client.quit();\n                            client.end();\n                            client = null;\n                            return;\n                        }\n                    }\n                });\n\n            } else {\n                const err = \"LOGIN/PASS failed\";\n                callback(err, null);\n                client.quit();\n                client.end();\n                client = null;\n                return;\n            }\n        });\n    });\n}\n\nexport function confirmLink(confirmLink){\n    testLogging(\"clickable link:\",confirmLink);\n    const doiConfirmlinkResult = getHttpGET(confirmLink,'');\n\n    chai.expect(doiConfirmlinkResult.content).to.have.string('ANMELDUNG ERFOLGREICH');\n    chai.expect(doiConfirmlinkResult.content).to.have.string('Vielen Dank fÃ¼r Ihre Anmeldung');\n    chai.expect(doiConfirmlinkResult.content).to.have.string('Ihre Anmeldung war erfolgreich.');\n    chai.assert.equal(200, doiConfirmlinkResult.statusCode);\n    return true;\n}\n\nexport function verifyDOI(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log ){\n    const syncFunc = Meteor.wrapAsync(verify_doi);\n    return syncFunc(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log );\n}\n\n\nasync function verify_doi(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log, callback){\n    let our_recipient_mail =recipient_mail;\n    if(Array.isArray(recipient_mail)){\n        our_recipient_mail=recipient_mail[0];\n    }\n    const urlVerify = dAppUrl+'/api/v1/opt-in/verify';\n    const recipient_public_key = Recipients.findOne({email: our_recipient_mail}).publicKey;\n    let resultVerify ={};\n    let statusVerify ={};\n\n    const dataVerify = {\n        recipient_mail: our_recipient_mail,\n        sender_mail: sender_mail,\n        name_id: nameId,\n        recipient_public_key: recipient_public_key\n    };\n\n    const headersVerify = {\n        'Content-Type':'application/json',\n        'X-User-Id':dAppUrlAuth.userId,\n        'X-Auth-Token':dAppUrlAuth.authToken\n    };\n    let running = true;\n    let counter = 0;\n\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get email from bobs mailbox\n            try{\n                testLogging('Step 5: verifying opt-in:', {data:dataVerify});\n                const realdataVerify = { data: dataVerify, headers: headersVerify };\n                resultVerify = getHttpGETdata(urlVerify, realdataVerify);\n                testLogging('result /opt-in/verify:',{status:resultVerify.data.status,val:resultVerify.data.data.val} );\n                statusVerify = resultVerify.statusCode;\n                if(resultVerify.data.data.val===true) running = false;\n\n            }catch(ex) {\n                testLogging('trying to verify opt-in - so far no success:');\n                generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n                await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n        }\n\n    })();\n    try{\n        if(statusVerify!=200) throw new AssertionError(\"Bad verify response\",statusVerify,200);\n        if(resultVerify.data.data.val != true) throw new Error(\"Verification did not return true\");\n        if(counter >= 50) throw new Error(\"could not verify DOI after retries\");\n        callback(null,true);\n    }\n    catch(error){\n        callback(error,false);\n    }\n}\n\nexport function createUser(url,auth,username,templateURL,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    }\n    const mailTemplate = {\n        \"subject\": \"Hello i am \"+username,\n        \"redirect\": \"https://www.doichain.org/vielen-dank/\",\n        \"returnPath\":  username+\"-test@doichain.org\",\n        \"templateURL\": templateURL\n    }\n    const urlUsers = url+'/api/v1/users';\n    const dataUser = {\"username\":username,\"email\":username+\"-test@doichain.org\",\"password\":\"password\",\"mailTemplate\":mailTemplate}\n\n    const realDataUser= { data: dataUser, headers: headersUser};\n    if(log) testLogging('createUser:', realDataUser);\n    let res = getHttpPOST(urlUsers,realDataUser);\n    if(log) testLogging(\"response\",res);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    return res.data.data.userid;\n}\n\nexport function findUser(userId){\n    const res = Accounts.users.findOne({_id:userId});\n    chai.expect(res).to.not.be.undefined;\n    return res;\n}\n\nexport function findOptIn(optInId,log){\n    const res = OptInsCollection.findOne({_id:optInId});\n    if(log)testLogging(res,optInId);\n    chai.expect(res).to.not.be.undefined;\n    return res;\n}\n\nexport function exportOptIns(url,auth,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    };\n\n    const urlExport = url+'/api/v1/export';\n    const realDataUser= {headers: headersUser};\n    let res = getHttpGETdata(urlExport,realDataUser);\n    if(log) testLogging(res,log);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    return res.data.data;\n}\n\n\nexport function requestConfirmVerifyBasicDoi(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,dappUrlBob,recipient_mail,sender_mail,optionalData,recipient_pop3username, recipient_pop3password, log) {\n    const syncFunc = Meteor.wrapAsync(request_confirm_verify_basic_doi);\n    return syncFunc(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,dappUrlBob, recipient_mail,sender_mail,optionalData,recipient_pop3username, recipient_pop3password, log);\n}\n\n\nasync function request_confirm_verify_basic_doi(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,\n                                                dappUrlBob, recipient_mail,sender_mail_in,optionalData,recipient_pop3username, recipient_pop3password, log, callback) {\n    if(log) testLogging('node_url_alice',node_url_alice);\n    if(log) testLogging('rpcAuthAlice',rpcAuthAlice);\n    if(log) testLogging('dappUrlAlice',dappUrlAlice);\n    if(log) testLogging('dataLoginAlice',dataLoginAlice);\n    if(log) testLogging('dappUrlBob',dappUrlBob);\n    if(log) testLogging('recipient_mail',recipient_mail);\n    if(log) testLogging('sender_mail_in',sender_mail_in);\n    if(log) testLogging('optionalData',optionalData);\n    if(log) testLogging('recipient_pop3username',recipient_pop3username);\n    if(log) testLogging('recipient_pop3password',recipient_pop3password);\n\n\n    let sender_mail = sender_mail_in;\n    if(log) testLogging('log into alice and request DOI');\n    let resultDataOptInTmp = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n    let resultDataOptIn = resultDataOptInTmp;\n\n    if(Array.isArray(sender_mail_in)){              //Select master doi from senders and result\n        if(log) testLogging('MASTER DOI: ',resultDataOptInTmp[0]);\n        resultDataOptIn = resultDataOptInTmp[0];\n        sender_mail = sender_mail_in[0];\n    }\n\n    //generating a block so transaction gets confirmed and delivered to bob.\n    generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n    let running = true;\n    let counter = 0;\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get email from bobs mailbox\n            try{\n                testLogging('step 3: getting email from hostname!',os.hostname());\n                const link2Confirm = fetchConfirmLinkFromPop3Mail((os.hostname()=='regtest')?'mail':'localhost', 110, recipient_pop3username, recipient_pop3password, dappUrlBob, false);\n                testLogging('step 4: confirming link',link2Confirm);\n                if(link2Confirm!=null) running=false;\n                confirmLink(link2Confirm);\n                testLogging('confirmed')\n            }catch(ex){\n                testLogging('trying to get email - so far no success:',counter);\n                await new Promise(resolve => setTimeout(resolve, 3000));\n            }\n        }\n\n        if(counter >= 50){\n            throw new Error(\"email not found after max retries\");\n        }\n\n    })();\n\n    if(os.hostname()!=='regtest'){ //if this is a selenium test from outside docker - don't verify DOI here for simplicity \n            testLogging('returning to test without DOI-verification while doing selenium outside docker');\n            callback(null, {status: \"DOI confirmed\"});\n           // return;\n    }else{\n        let nameId=null;\n        try{\n            const nameId = getNameIdOfOptInFromRawTx(node_url_alice,rpcAuthAlice,resultDataOptIn.data.id,true);\n            if(log) testLogging('got nameId',nameId);\n            generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n            testLogging('before verification');\n\n            if(Array.isArray(sender_mail_in)){\n                for (let index = 0; index < sender_mail_in.length; index++) {\n                    let tmpId = index==0 ? nameId : nameId+\"-\"+(index); //get nameid of coDOIs based on master\n                    testLogging(\"NameId of coDoi: \",tmpId);\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuthAlice, sender_mail_in[index], recipient_mail, tmpId, true);\n                }\n            }\n            else{\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail, nameId, true); //need to generate two blocks to make block visible on alice\n            }\n            testLogging('after verification');\n            callback(null, {optIn: resultDataOptIn, nameId: nameId});\n        }\n        catch(error){\n            callback(error, {optIn: resultDataOptIn, nameId: nameId});\n        }\n    }\n\n\n}\n\nexport function updateUser(url,auth,updateId,mailTemplate,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    }\n\n    const dataUser = {\"mailTemplate\":mailTemplate};\n    if(log) testLogging('url:', url);\n    const urlUsers = url+'/api/v1/users/'+updateId;\n    const realDataUser= { data: dataUser, headers: headersUser};\n    if(log) testLogging('updateUser:', realDataUser);\n    let res = HTTP.put(urlUsers,realDataUser);\n    if(log) testLogging(\"response\",res);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    const usDat = Accounts.users.findOne({_id:updateId}).profile.mailTemplate;\n    if(log) testLogging(\"InputTemplate\",dataUser.mailTemplate);\n    if(log) testLogging(\"ResultTemplate\",usDat);\n    chai.expect(usDat).to.not.be.undefined;\n    chai.assert.equal(dataUser.mailTemplate.templateURL,usDat.templateURL);\n    return usDat;\n}\n\nexport function resetUsers(){\n    Accounts.users.remove(\n        {\"username\":\n        {\"$ne\":\"admin\"}\n        }\n    );\n}\n","import {\n    httpPOST as getHttpPOST,\n    testLog as testLogging,\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {chai} from 'meteor/practicalmeteor:chai';\nimport {Meteor} from \"meteor/meteor\";\nconst os = require('os');\nlet sudo = (os.hostname()=='regtest')?'sudo ':''\nconst headers = { 'Content-Type':'text/plain'  };\nconst exec = require('child_process').exec;\n\nexport function initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyBob,log) {            //connect nodes (alice & bob) and generate DOI (only if not connected)\n\n    testLogging(\"importing private key:\"+privKeyBob);\n    importPrivKey(node_url_bob, rpcAuth, privKeyBob, true, log);\n    try {\n        const aliceContainerId = getContainerIdOfName('alice');\n        const statusDocker = JSON.parse(getDockerStatus(aliceContainerId));\n        logBlockchain(\"real balance :\" + statusDocker.balance, (Number(statusDocker.balance) > 0));\n        logBlockchain(\"connections:\" + statusDocker.connections);\n        if (Number(statusDocker.connections) == 0) {\n            isNodeAlive(node_url_alice, rpcAuth, log);\n            isNodeAliveAndConnectedToHost(node_url_bob, rpcAuth, 'alice', log);\n        }\n\n        if (Number(statusDocker.balance) > 0) {\n            logBlockchain(\"enough founding for alice - blockchain already connected\");\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, log);\n            return;\n        }\n    } catch (exception) {\n        logBlockchain(\"connecting blockchain and mining some coins\");\n    }\n    global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, log);\n    generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 210);  //110 blocks to new address! 110 blÃ¶cke *25 coins\n\n}\nfunction wait_to_start_container(startedContainerId,callback){\n    let running = true;\n    let counter = 0;\n\n    //here we make sure bob gets started and connected again in probably all possible sitautions\n    while(running){\n        try{\n            const statusDocker = JSON.parse(getDockerStatus(startedContainerId));\n            testLogging(\"getinfo\",statusDocker);\n            testLogging(\"version:\"+statusDocker.version);\n            testLogging(\"balance:\"+statusDocker.balance);\n            testLogging(\"connections:\"+statusDocker.connections);\n            if(statusDocker.connections===0){\n                doichainAddNode(startedContainerId);\n            }\n            running = false;\n        }\n        catch(error){\n            testLogging(\"statusDocker problem trying to start Bobs node inside docker container:\",error);\n            try{\n                connectDockerBob(startedContainerId);\n            }catch(error2){\n                testLogging(\"could not start bob:\",error2);\n            }\n            if(counter==50)running=false;\n        }\n        counter++;\n    }\n    callback(null, startedContainerId);\n}\n\nfunction delete_options_from_alice_and_bob(callback){\n    const containerId = getContainerIdOfName('mongo');\n    exec('sudo docker cp /home/doichain/dapp/contrib/scripts/meteor/delete_collections.sh '+containerId+':/tmp/', (e, stdout, stderr)=> {\n        testLogging('copied delete_collections into mongo docker container',{stderr:stderr,stdout:stdout});\n        exec('sudo docker exec '+containerId+' bash -c \"mongo < /tmp/delete_collections.sh\"', (e, stdout, stderr)=> {\n            testLogging('sudo docker exec '+containerId+' bash -c \"mongo < /tmp/delete_collections.sh\"',{stderr:stderr,stdout:stdout});\n            callback(stderr, stdout);\n        });\n\n    });\n}\n\nexport function isNodeAlive(url, auth, log) {\n    if(log) testLogging('isNodeAlive called to url',url);\n    const dataGetNetworkInfo = {\"jsonrpc\": \"1.0\", \"id\": \"getnetworkinfo\", \"method\": \"getnetworkinfo\", \"params\": []};\n    const realdataGetNetworkInfo = {auth: auth, data: dataGetNetworkInfo, headers: headers};\n    const resultGetNetworkInfo = getHttpPOST(url, realdataGetNetworkInfo);\n    const statusGetNetworkInfo = resultGetNetworkInfo.statusCode;\n    chai.assert.equal(200, statusGetNetworkInfo);\n    if(log)\n        testLogging('resultGetNetworkInfo:',resultGetNetworkInfo); // getnetworkinfo | jq '.localaddresses[0].address'\n}\n\nexport function isNodeAliveAndConnectedToHost(url, auth, host, log) {\n    if(log) testLogging('isNodeAliveAndConnectedToHost called');\n    isNodeAlive(url, auth, log);\n\n    const dataGetNetworkInfo = {\"jsonrpc\": \"1.0\", \"id\":\"addnode\", \"method\": \"addnode\", \"params\": ['alice','onetry'] };\n    const realdataGetNetworkInfo = { auth: auth, data: dataGetNetworkInfo, headers: headers };\n    const resultGetNetworkInfo = getHttpPOST(url, realdataGetNetworkInfo);\n    const statusAddNode = resultGetNetworkInfo.statusCode;\n    if(log) testLogging('addnode:',statusAddNode);\n    chai.assert.equal(200, statusAddNode);\n\n\n    const dataGetPeerInfo = {\"jsonrpc\": \"1.0\", \"id\":\"getpeerinfo\", \"method\": \"getpeerinfo\", \"params\": [] };\n    const realdataGetPeerInfo = { auth: auth, data: dataGetPeerInfo, headers: headers };\n    const resultGetPeerInfo = getHttpPOST(url, realdataGetPeerInfo);\n    const statusGetPeerInfo = resultGetPeerInfo.statusCode;\n    if(log) testLogging('resultGetPeerInfo:',resultGetPeerInfo);\n    chai.assert.equal(200, statusGetPeerInfo);\n    chai.assert.isAbove(resultGetPeerInfo.data.result.length, 0, 'no connection to other nodes! ');\n    //chai.expect(resultGetPeerInfo.data.result).to.have.lengthOf.at.least(1);\n\n}\n\nexport function importPrivKey(url, auth, privKey, rescan, log) {\n        if(log) testLogging('importPrivKey called','');\n        const data_importprivkey = {\"jsonrpc\": \"1.0\", \"id\":\"importprivkey\", \"method\": \"importprivkey\", \"params\": [privKey] };\n        const realdata_importprivkey = { auth: auth, data: data_importprivkey, headers: headers };\n        const result = getHttpPOST(url, realdata_importprivkey);\n        if(log) testLogging('result:',result);\n}\n\nexport function getNewAddress(url, auth, log) {\n\n    if(log) testLogging('getNewAddress called');\n    const dataGetNewAddress = {\"jsonrpc\": \"1.0\", \"id\":\"getnewaddress\", \"method\": \"getnewaddress\", \"params\": [] };\n    const realdataGetNewAddress = { auth: auth, data: dataGetNewAddress, headers: headers };\n    const resultGetNewAddress = getHttpPOST(url, realdataGetNewAddress);\n    const statusOptInGetNewAddress = resultGetNewAddress.statusCode;\n    const newAddress  = resultGetNewAddress.data.result;\n    chai.assert.equal(200, statusOptInGetNewAddress);\n    chai.expect(resultGetNewAddress.data.error).to.be.null;\n    chai.expect(newAddress).to.not.be.null;\n    if(log) testLogging(newAddress);\n    return newAddress;\n}\n\nexport function generatetoaddress(url,auth,toaddress,amount,log){\n    const dataGenerate = {\"jsonrpc\": \"1.0\", \"id\":\"generatetoaddress\", \"method\": \"generatetoaddress\", \"params\": [amount,toaddress] };\n    const headersGenerates = { 'Content-Type':'text/plain'  };\n    const realdataGenerate = { auth: auth, data: dataGenerate, headers: headersGenerates };\n    const resultGenerate = getHttpPOST(url, realdataGenerate);\n    const statusResultGenerate = resultGenerate.statusCode;\n    if(log)testLogging('statusResultGenerate:',statusResultGenerate);\n    chai.assert.equal(200, statusResultGenerate);\n    chai.expect(resultGenerate.data.error).to.be.null;\n    chai.expect(resultGenerate.data.result).to.not.be.null;\n}\n\nexport function getBalance(url,auth,log){\n    const dataGetBalance = {\"jsonrpc\": \"1.0\", \"id\":\"getbalance\", \"method\": \"getbalance\", \"params\": [] };\n    const realdataGetBalance = { auth: auth, data: dataGetBalance, headers: headers };\n    const resultGetBalance = getHttpPOST(url, realdataGetBalance);\n    if(log)testLogging('resultGetBalance:',resultGetBalance.data.result);\n    return resultGetBalance.data.result;\n}\n\nfunction get_container_id_of_name(name,callback) {\n    exec(sudo+'docker ps --filter \"name='+name+'\" | cut -f1 -d\" \" | sed \\'1d\\'', (e, stdout, stderr)=> {\n        if(e!=null){\n            testLogging('cannot find '+name+' node '+stdout,stderr);\n            return null;\n        }\n        const bobsContainerId = stdout.toString().trim(); //.substring(0,stdout.toString().length-1); //remove last char since ins a line break\n        callback(stderr, bobsContainerId);\n    });\n}\n\nfunction stop_docker_bob(callback) {\n    const bobsContainerId = getContainerIdOfName('bob');\n    testLogging('stopping Bob with container-id: '+bobsContainerId);\n    try{\n        exec(sudo+'docker stop '+bobsContainerId, (e, stdout, stderr)=> {\n            testLogging('stopping Bob with container-id: ',{stdout:stdout,stderr:stderr});\n            callback(null, bobsContainerId);\n        });\n    }catch (e) {\n        testLogging('couldnt stop bobs node',e);\n    }\n}\n\nfunction doichain_add_node(containerId,callback) {\n    exec(sudo+'docker exec '+containerId+' doichain-cli addnode alice onetry', (e, stdout, stderr)=> {\n        testLogging('bob '+containerId+' connected? ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction get_docker_status(containerId,callback) {\n    logBlockchain('containerId '+containerId+' running? ');\n    exec(sudo+'docker exec '+containerId+' doichain-cli -getinfo', (e, stdout, stderr)=> {\n        testLogging('containerId '+containerId+' status: ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction start_docker_bob(bobsContainerId,callback) {\n    exec(sudo+'docker start '+bobsContainerId, (e, stdout, stderr)=> {\n        testLogging('started bobs node again: '+bobsContainerId,{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout.toString().trim()); //remove line break from the end\n    });\n}\n\nfunction connect_docker_bob(bobsContainerId, callback) {\n    exec(sudo+'docker exec '+bobsContainerId+' doichaind -regtest -daemon -reindex -addnode=alice', (e, stdout, stderr)=> {\n        testLogging('restarting doichaind on bobs node and connecting with alice: ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction start_3rd_node(callback) {\n    exec(sudo+'docker start 3rd_node', (e, stdout, stderr)=> {\n        testLogging('trying to start 3rd_node',{stdout:stdout,stderr:stderr});\n        if(stderr){\n            exec(sudo+'docker network ls |grep doichain | cut -f9 -d\" \"', (e, stdout, stderr)=> {\n                const network = stdout.toString().substring(0,stdout.toString().length-1);\n                testLogging('connecting 3rd node to docker network: '+network);\n                exec(sudo+'docker run --expose=18332 ' +\n                    '-e REGTEST=true ' +\n                    '-e DOICHAIN_VER=0.16.3.2 ' +\n                    '-e RPC_ALLOW_IP=::/0 ' +\n                    '-e CONNECTION_NODE=alice '+\n                    '-e RPC_PASSWORD=generated-password ' +\n                    '--name=3rd_node '+\n                    '--dns=172.20.0.5  ' +\n                    '--dns=8.8.8.8 ' +\n                    '--dns-search=ci-doichain.org ' +\n                    '--ip=172.20.0.10 ' +\n                    '--network='+network+' -d doichain/core:0.16.3.2', (e, stdout, stderr)=> {\n                    callback(stderr, stdout);\n                });\n            });\n        }else{\n            callback(stderr, stdout);\n        }\n    });\n\n\n}\n\nfunction run_and_wait(runfunction,seconds, callback){\n    Meteor.setTimeout(function () {\n        runfunction();\n        callback(null,true);\n    }, seconds+1000);\n}\n\nexport function waitToStartContainer(containerId) {\n    const syncFunc = Meteor.wrapAsync(wait_to_start_container);\n    return syncFunc(containerId);\n}\n\nexport function deleteOptInsFromAliceAndBob() {\n    const syncFunc = Meteor.wrapAsync(delete_options_from_alice_and_bob);\n    return syncFunc();\n}\n\nexport function start3rdNode() {\n    const syncFunc = Meteor.wrapAsync(start_3rd_node);\n    return syncFunc();\n}\n\nexport function stopDockerBob() {\n    const syncFunc = Meteor.wrapAsync(stop_docker_bob);\n    return syncFunc();\n}\n\nexport function getContainerIdOfName(name) {\n    const syncFunc = Meteor.wrapAsync(get_container_id_of_name);\n    return syncFunc(name);\n}\n\nexport function startDockerBob(containerId) {\n    const syncFunc = Meteor.wrapAsync(start_docker_bob);\n    return syncFunc(containerId);\n}\n\nexport function doichainAddNode(containerId) {\n    const syncFunc = Meteor.wrapAsync(doichain_add_node);\n    return syncFunc(containerId);\n}\n\nexport function getDockerStatus(containerId) {\n    const syncFunc = Meteor.wrapAsync(get_docker_status);\n    return syncFunc(containerId);\n}\n\nexport function connectDockerBob(containerId) {\n    const syncFunc = Meteor.wrapAsync(connect_docker_bob);\n    return syncFunc(containerId);\n}\n\nexport function runAndWait(runfunction, seconds) {\n    const syncFunc = Meteor.wrapAsync(run_and_wait);\n    return syncFunc(seconds);\n}","import {chai} from 'meteor/practicalmeteor:chai';\nimport { testLog } from \"meteor/doichain:doichain-meteor-api\";\nimport {\n    deleteOptInsFromAliceAndBob, getBalance, initBlockchain\n} from \"./test-api/test-api-on-node\";\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst node_url_bob =   'http://172.20.0.7:18332/';\nconst rpcAuth = \"admin:generated-password\";\nconst privKeyBob = \"cP3EigkzsWuyKEmxk8cC6qXYb4ZjwUo5vzvZpAPmDQ83RCgXQruj\";\nconst log = true;\n\nif(Meteor.isAppTest) {\n    describe('basic-doi-test-0', function () {\n        this.timeout(0);\n\n        before(function () {\n            testLog(\"removing OptIns,Recipients,Senders\",'');\n            deleteOptInsFromAliceAndBob();\n        });\n\n        it('should create a RegTest Doichain with alice and bob and some Doi - coins', function () {\n            initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyBob,true);\n            const aliceBalance = getBalance(node_url_alice, rpcAuth, log);\n            chai.assert.isAbove(aliceBalance, 0, 'no funding! ');\n        });\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    login,\n    createUser,\n    findUser,\n    exportOptIns,\n    requestConfirmVerifyBasicDoi, resetUsers, updateUser, deleteAllEmailsFromPop3\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {deleteOptInsFromAliceAndBob} from \"./test-api/test-api-on-node\";\n\nconst node_url_alice = 'http://172.20.0.6:18332/';\n\nconst rpcAuthAlice = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\n\nconst templateUrlA=\"http://172.20.0.8:4000/templates/emails/doichain-anmeldung-final-DE.html\";\nconst templateUrlB=\"http://172.20.0.8:4000/templates/emails/doichain-anmeldung-final-EN.html\";\nconst aliceALogin = {\"username\":\"alice-a\",\"password\":\"password\"};\nconst aliceBLogin = {\"username\":\"alice-a\",\"password\":\"password\"};\n\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nif(Meteor.isAppTest) {\n    describe('basic-doi-test-01', function () {\n        this.timeout(0);\n\n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n        });\n\n        it('should test if basic Doichain workflow is working with optional data', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice@ci-doichain.org\";\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n\n        it('should test if basic Doichain workflow is working without optional data', function (done) {\n            const recipient_mail = \"alice@ci-doichain.org\"; //please use this as an alernative when above standard is not possible\n            const sender_mail = \"bob@ci-doichain.org\";\n            //login to dApp & request DOI on alice via bob\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, null, \"alice@ci-doichain.org\", \"alice\", true);\n            done();\n        });\n\n        it('should create two more users', function (done) {\n            resetUsers();\n            const logAdmin = login(dappUrlAlice, dAppLogin, false);\n            let userA = createUser(dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            done();\n        });\n\n        it('should test if Doichain workflow is using different templates for different users', function (done) {\n\n            resetUsers();\n            const recipient_mail = \"bob@ci-doichain.org\"; //\n            const sender_mail_alice_a = \"alice-a@ci-doichain.org\";\n            const sender_mail_alice_b = \"alice-b@ci-doichain.org\";\n            const logAdmin = login(dappUrlAlice, dAppLogin, false);\n\n            let userA = createUser(dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            const logUserA = login(dappUrlAlice, aliceALogin, true);\n            const logUserB = login(dappUrlAlice, aliceBLogin, true);\n\n            //requestConfirmVerifyBasicDoi checks if the \"log\" value (if it is a String) is in the mail-text\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, logUserA, dappUrlBob, recipient_mail, sender_mail_alice_a, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", \"kostenlose Anmeldung\");\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, logUserB, dappUrlBob, recipient_mail, sender_mail_alice_b, {'city': 'Simbach'}, \"bob@ci-doichain.org\", \"bob\", \"free registration\");\n\n            done();\n        });\n\n        it('should test if users can export OptIns ', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //\n            const sender_mail_alice_a = \"alice-export@ci-doichain.org\";\n            const logAdmin = login(dappUrlAlice, dAppLogin, true);\n            const logUserA = login(dappUrlAlice, aliceALogin, true);\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, logUserA, dappUrlBob, recipient_mail, sender_mail_alice_a, {'city': 'MÃ¼nchen'}, \"bob@ci-doichain.org\", \"bob\", true);\n            const exportedOptIns = exportOptIns(dappUrlAlice, logAdmin, true);\n            chai.expect(exportedOptIns).to.not.be.undefined;\n            chai.expect(exportedOptIns[0]).to.not.be.undefined;\n            const exportedOptInsA = exportOptIns(dappUrlAlice, logUserA, true);\n            exportedOptInsA.forEach(element => {\n                chai.expect(element.ownerId).to.be.equal(logUserA.userId);\n            });\n            //chai.expect(findOptIn(resultDataOptIn._id)).to.not.be.undefined;\n            done();\n        });\n\n\n        it('should test if admin can update user profiles', function () {\n            resetUsers();\n            let logAdmin = login(dappUrlAlice, dAppLogin, true);\n            const userUp = createUser(dappUrlAlice, logAdmin, \"updateUser\", templateUrlA, true);\n            const changedData = updateUser(dappUrlAlice, logAdmin, userUp, {\"templateURL\": templateUrlB}, true);\n            chai.expect(changedData).not.undefined;\n        });\n\n        it('should test if user can update own profile', function () {\n            resetUsers();\n            let logAdmin = login(dappUrlAlice, dAppLogin, true);\n            const userUp = createUser(dappUrlAlice, logAdmin, \"updateUser\", templateUrlA, true);\n            const logUserUp = login(dappUrlAlice, {\"username\": \"updateUser\", \"password\": \"password\"}, true);\n            const changedData = updateUser(dappUrlAlice, logUserUp, userUp, {\"templateURL\": templateUrlB}, true);\n            chai.expect(changedData).not.undefined;\n        });\n\n        it('should test if coDoi works', function () {\n            const coDoiList = [\"alice1@doichain-ci.com\", \"alice2@doichain-ci.com\", \"alice3@doichain-ci.com\"];\n            const recipient_mail = \"bob@ci-doichain.org\";\n            const sender_mail = coDoiList;\n            let logAdmin = login(dappUrlAlice, dAppLogin, true);\n            const coDois = requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, logAdmin, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n        });\n\n        it('should find updated Data in email', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice-update@ci-doichain.org\";\n            const adLog = login(dappUrlAlice, dAppLogin, false);\n            updateUser(dappUrlAlice, adLog, adLog.userId, {\"subject\": \"updateTest\", \"templateURL\": templateUrlB});\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, adLog, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    confirmLink, deleteAllEmailsFromPop3,\n    fetchConfirmLinkFromPop3Mail,\n    getNameIdOfOptInFromRawTx,\n    login,\n    requestDOI, verifyDOI\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as testLogging\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {\n    deleteOptInsFromAliceAndBob,\n    generatetoaddress,\n    getNewAddress,\n    start3rdNode,\n    startDockerBob,\n    stopDockerBob, waitToStartContainer\n} from \"./test-api/test-api-on-node\";\nconst exec = require('child_process').exec;\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nconst rpcAuth = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\nconst log = true;\n\nif(Meteor.isAppTest) {\n    describe('02-basic-doi-test-with-offline-node-02', function () {\n\n        before(function () {\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n            exec('sudo docker rm 3rd_node', (e, stdout2, stderr2) => {\n                testLogging('deleted 3rd_node:', {stdout: stdout2, stderr: stderr2});\n            });\n\n            try {\n                exec('sudo docker stop 3rd_node', (e, stdout, stderr) => {\n                    testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                    exec('sudo docker rm 3rd_node', (e, stdout, stderr) => {\n                        testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                    });\n                });\n            } catch (ex) {\n                testLogging('could not stop 3rd_node',);\n            }\n            //importPrivKey(node_url_bob, rpcAuth, privKeyBob, true, false);\n        });\n\n        before(function () {\n            try {\n                exec('sudo docker stop 3rd_node', (e, stdout, stderr) => {\n                    testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                    exec('sudo docker rm 3rd_node', (e, stdout, stderr) => {\n                        testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                    });\n                });\n            } catch (ex) {\n                testLogging('could not stop 3rd_node',);\n            }\n        });\n\n        it('should test if basic Doichain workflow is working when Bobs node is temporarily offline', function (done) {\n            this.timeout(0);\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, false);\n            //start another 3rd node before shutdown Bob\n            start3rdNode();\n            var containerId = stopDockerBob();\n            const recipient_mail = \"bob@ci-doichain.org\";\n            const sender_mail = \"alice-to-offline-node@ci-doichain.org\";\n            //login to dApp & request DOI on alice via bob\n            if (log) testLogging('log into alice and request DOI');\n            let dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            let resultDataOptIn = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n\n            const nameId = getNameIdOfOptInFromRawTx(node_url_alice, rpcAuth, resultDataOptIn.data.id, true);\n            if (log) testLogging('got nameId', nameId);\n            var startedContainerId = startDockerBob(containerId);\n            testLogging(\"started bob's node with containerId\", startedContainerId);\n            chai.expect(startedContainerId).to.not.be.null;\n            waitToStartContainer(startedContainerId);\n\n            //generating a block so transaction gets confirmed and delivered to bob.\n            generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n            let running = true;\n            let counter = 0;\n            (async function loop() {\n                while (running && ++counter < 50) { //trying 50x to get email from bobs mailbox\n                    try {\n                        //  generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n                        testLogging('step 3: getting email!');\n                        const link2Confirm = fetchConfirmLinkFromPop3Mail(\"mail\", 110, recipient_pop3username, recipient_pop3password, dappUrlBob, false);\n                        testLogging('step 4: confirming link', link2Confirm);\n                        if (link2Confirm != null) running = false;\n                        confirmLink(link2Confirm);\n                        testLogging('confirmed');\n                    } catch (ex) {\n                        testLogging('trying to get email - so far no success:', counter);\n                        await new Promise(resolve => setTimeout(resolve, 2000));\n                    }\n                }\n                generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuth, sender_mail, recipient_mail, nameId, log); //need to generate two blocks to make block visible on alice\n                testLogging('end of getNameIdOfRawTransaction returning nameId', nameId);\n                try {\n                    exec('sudo docker stop 3rd_node', (e, stdout, stderr) => {\n                        testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                        exec('sudo docker rm 3rd_node', (e, stdout, stderr) => {\n                            testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                        });\n                    });\n                } catch (ex) {\n                    testLogging('could not stop 3rd_node',);\n                }\n                done();\n            })();\n            //done();\n        }); //it\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    deleteAllEmailsFromPop3, findOptIn,\n    login,\n    requestConfirmVerifyBasicDoi, requestDOI\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {deleteOptInsFromAliceAndBob, generatetoaddress, getNewAddress} from \"./test-api/test-api-on-node\";\n\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst rpcAuthAlice = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nif(Meteor.isAppTest) {\n    describe('03-basic-doi-test-03', function () {\n\n        before(function () {\n            //logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n        });\n\n        it('should test if basic Doichain workflow running 5 times', function (done) {\n            this.timeout(0);\n\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuthAlice, false);\n            for (let i = 0; i < 20; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg_' + i}, \"bob@ci-doichain.org\", \"bob\", true);\n            }\n            done();\n        });\n\n        it('should test if basic Doichain workflow running 20 times without confirmation and verification', function (done) {\n            this.timeout(0);\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuthAlice, false);\n            for (let i = 0; i < 20; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                const resultDataOptIn = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n                chai.expect(findOptIn(resultDataOptIn.data.id, true)).to.not.be.undefined;\n            }\n            done();\n        });\n\n        it('should test if basic Doichain workflow running 100 times with without confirmation and verification', function (done) {\n            this.timeout(0);\n            deleteAllEmailsFromPop3(\"mail\", 110, recipient_pop3username, recipient_pop3password, true);\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuthAlice, false);\n            for (let i = 0; i < 100; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                const resultDataOptIn = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n                chai.expect(findOptIn(resultDataOptIn.data.id, true)).to.not.be.undefined;\n                if (i % 100 === 0) generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n            }\n            done();\n        });\n    });\n}","if(Meteor.isAppTest || Meteor.isTest) {\n\n    describe('simple-selenium-test', function () {\n\n        this.timeout(10000);\n        beforeEach(function () {\n\n        });\n\n\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {deleteOptInsFromAliceAndBob, getBalance, initBlockchain} from \"./test-api/test-api-on-node\";\nimport {login, requestConfirmVerifyBasicDoi} from \"./test-api/test-api-on-dapp\";\nconst node_url_alice = 'http://172.20.0.6:18332/';\nconst node_url_bob =   'http://172.20.0.7:18332/';\nconst rpcAuth = \"admin:generated-password\";\nconst privKeyBob = \"cP3EigkzsWuyKEmxk8cC6qXYb4ZjwUo5vzvZpAPmDQ83RCgXQruj\";\nconst log = true;\n\n\nconst rpcAuthAlice = \"admin:generated-password\";\nconst dappUrlAlice = \"http://localhost:3000\";\nconst dappUrlBob = \"http://172.20.0.8:4000\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\n\n\nif(Meteor.isTest || Meteor.isAppTest) {\n\n    describe('basic-doi-test-nico', function () {\n        this.timeout(600000);\n\n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n        });\n\n        xit('should create a RegTest Doichain with alice and bob and some Doi - coins', function () {\n            initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyBob,true);\n            const aliceBalance = getBalance(node_url_alice, rpcAuth, log);\n            chai.assert.isAbove(aliceBalance, 0, 'no funding! ');\n        });\n\n        xit('should test if basic Doichain workflow is working with optional data', function (done) {\n            const recipient_mail = \"bob+1@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice@ci-doichain.org\";\n            const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n    });\n\n    xdescribe('basic-doi-test-nico', function () {\n\n\n        /**\n         * Information regarding to event loop node.js\n         * - https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/\n         *\n         * Promises:\n         * - https://developers.google.com/web/fundamentals/primers/promises\n         *\n         * Promise loops and async wait\n         * - https://stackoverflow.com/questions/40328932/javascript-es6-promise-for-loop\n         *\n         * Asynchronous loops with mocha:\n         * - https://whitfin.io/asynchronous-test-loops-with-mocha/\n         */\n        /*  it('should test a timeout with a promise', function (done) {\n              logBlockchain(\"truying a promise\");\n              for (let i = 0; i < 10; i++) {\n                  const promise = new Promise((resolve, reject) => {\n                      const timeout = Math.random() * 1000;\n                      setTimeout(() => {\n                          console.log('promise:'+i);\n                      }, timeout);\n                  });\n                  // TODO: Chain this promise to the previous one (maybe without having it running?)\n              }\n              done();\n          });\n\n          it('should run a loop with async wait', function (done) {\n              logBlockchain(\"trying asycn wait\");\n              (async function loop() {\n                  for (let i = 0; i < 10; i++) {\n                      await new Promise(resolve => setTimeout(resolve, Math.random() * 1000));\n                      console.log('async wait'+i);\n                  }\n                  done()\n              })();\n          });\n\n          xit('should safely stop and start bobs doichain node container', function (done) {\n              var containerId = stopDockerBob();\n\n              logBlockchain(\"stopped bob's node with containerId\",containerId);\n              chai.expect(containerId).to.not.be.null;\n\n              var startedContainerId = startDockerBob(containerId);\n              logBlockchain(\"started bob's node with containerId\",startedContainerId);\n              chai.expect(startedContainerId).to.not.be.null;\n\n              let running = true;\n              while(running){\n                  runAndWait(function () {\n                      try{\n                          const statusDocker = JSON.parse(getDockerStatus(containerId));\n                          logBlockchain(\"getinfo\",statusDocker);\n                          logBlockchain(\"version:\"+statusDocker.version);\n                          logBlockchain(\"balance:\"+statusDocker.balance);\n                          logBlockchain(\"balance:\"+statusDocker.connections);\n                          if(statusDocker.connections===0){\n                              doichainAddNode(containerId);\n                          }\n                          running = false;\n                      }\n                      catch(error){\n                          logBlockchain(\"statusDocker problem:\",error);\n                      }\n                  },2);\n              }\n\n              done();\n          });*/\n    });\n}","import {chai} from 'meteor/practicalmeteor:chai';\nif(Meteor.isTest) {\n\n    describe('basic-doi-test-flo', function () {\n    });\n}\n\n\n"]}