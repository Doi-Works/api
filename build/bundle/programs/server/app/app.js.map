{"version":3,"sources":["meteor://ðŸ’»app/server/test/test-api/test-api-on-dapp.js","meteor://ðŸ’»app/server/test/test-api/test-api-on-node.js","meteor://ðŸ’»app/server/test/0-basic-doi-tests.0.js","meteor://ðŸ’»app/server/test/1-basic-doi-test.1.js","meteor://ðŸ’»app/server/test/2-basic-doi-test.2.js","meteor://ðŸ’»app/server/test/3-basic-doi-test.3.js","meteor://ðŸ’»app/server/test/5-selenium-test-flo.js","meteor://ðŸ’»app/server/test/basic-doi-test-nico.js","meteor://ðŸ’»app/server/test/basic-doi-test.flo.js","meteor://ðŸ’»app/server/publications/user.js"],"names":["module","export","login","requestDOI","getNameIdOfRawTransaction","getNameIdOfOptInFromRawTx","fetchConfirmLinkFromPop3Mail","deleteAllEmailsFromPop3","clickConfirmLink","verifyDOI","createUser","findUser","findOptIn","exportOptIns","requestConfirmVerifyBasicDoi","updateUser","resetUsers","Meteor","link","v","HTTP","URL","chai","quotedPrintableDecode","OptInsCollection","Recipients","getHttpGETdata","getHttpPOST","getUrl","testLogging","RecipientsCollection","httpGETdata","httpPOST","getServerUrl","testLog","generatetoaddress","headers","os","require","POP3Client","url","paramsLogin","log","urlLogin","headersLogin","realDataLogin","params","result","statusCode","dataLogin","data","statusLogin","status","assert","equal","auth","recipient_mail","sender_mail","syncFunc","wrapAsync","request_DOI","callback","urlOptIn","dataOptIn","JSON","stringify","headersOptIn","userId","authToken","realDataOptIn","resultOptIn","Array","isArray","forEach","element","e","txId","get_nameid_of_raw_transaction","nameId","running","counter","loop","dataGetRawTransaction","realdataGetRawTransaction","resultGetRawTransaction","vout","scriptPubKey","nameOp","undefined","name","txid","ex","Promise","resolve","setTimeout","optInId","get_nameid_of_optin_from_rawtx","our_optIn","findOne","_id","notEqual","isBelow","error","hostname","port","username","password","alicedapp_url","mail_test_string","fetch_confirm_link_from_pop3_mail","client","tlserrs","enabletls","debug","on","rawdata","list","msgcount","msgnumber","err","rset","retr","maildata","html","replaceAll","linkdata","expect","indexOf","to","not","substring","match","be","null","requestData","dele","quit","end","str","find","replace","RegExp","delete_all_emails_from_pop3","i","confirmLink","confirm_link","confirmlink","doiConfirmlinkRedir","get","followRedirects","redirLocation","location","startsWith","doiConfirmlinkResult","content","have","string","dAppUrl","dAppUrlAuth","node_url_alice","rpcAuthAlice","verify_doi","our_recipient_mail","urlVerify","recipient_public_key","email","publicKey","resultVerify","statusVerify","dataVerify","name_id","headersVerify","realdataVerify","val","global","aliceAddress","templateURL","headersUser","mailTemplate","urlUsers","dataUser","realDataUser","res","userid","Accounts","users","urlExport","dappUrlAlice","dataLoginAlice","dappUrlBob","optionalData","recipient_pop3username","recipient_pop3password","request_confirm_verify_basic_doi","sender_mail_in","resultDataOptInTmp","resultDataOptIn","confirmedLink","lastError","link2Confirm","redirLink","redirectParam","redirUrl","Object","keys","key","isTrue","searchParams","has","id","index","length","tmpId","optIn","updateId","put","usDat","profile","remove","initBlockchain","isNodeAlive","isNodeAliveAndConnectedToHost","importPrivKey","getNewAddress","getBalance","waitToStartContainer","deleteOptInsFromAliceAndBob","start3rdNode","stopDockerBob","getContainerIdOfName","startDockerBob","doichainAddNode","getDockerStatus","connectDockerBob","runAndWait","logBlockchain","sudo","exec","node_url_bob","rpcAuth","privKeyAlice","privKeyBob","aliceContainerId","statusDocker","parse","balance","Number","connections","exception","wait_to_start_container","startedContainerId","version","error2","delete_options_from_alice_and_bob","containerId","inside_docker","stdout","stderr","dataGetNetworkInfo","realdataGetNetworkInfo","resultGetNetworkInfo","statusGetNetworkInfo","host","statusAddNode","dataGetPeerInfo","realdataGetPeerInfo","resultGetPeerInfo","statusGetPeerInfo","isAbove","privKey","rescan","data_importprivkey","realdata_importprivkey","dataGetNewAddress","realdataGetNewAddress","resultGetNewAddress","statusOptInGetNewAddress","newAddress","toaddress","amount","dataGenerate","headersGenerates","realdataGenerate","resultGenerate","statusResultGenerate","dataGetBalance","realdataGetBalance","resultGetBalance","get_container_id_of_name","bobsContainerId","toString","trim","stop_docker_bob","doichain_add_node","get_docker_status","start_docker_bob","connect_docker_bob","start_3rd_node","network","run_and_wait","runfunction","seconds","dns","setServers","insde_docker","dAppLogin","isAppTest","describe","timeout","before","it","aliceBalance","templateUrlA","templateUrlB","aliceALogin","aliceBLogin","adLog","afterEach","done","logAdmin","userA","userB","sender_mail_alice_a","sender_mail_alice_b","logUserA","logUserB","logBasic","exportedOptIns","console","RecipientEmail","exportedOptInsA","ownerId","userUp","changedData","logUserUp","coDoiList","coDois","sender_mail_a","sender_mail_b","returnedData","stdout2","stderr2","isTest","xdescribe","beforeEach","publish","fields","ready"],"mappings":"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GARQ,CAAT;AASH,C;;;;;;;;;;;ACXD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,I;;;;;;;;;;;ACvHA,IAAIlU,IAAJ;AAAStB,MAAM,CAACkB,IAAP,CAAY,6BAAZ,EAA0C;AAACI,MAAI,CAACH,CAAD,EAAG;AAACG,QAAI,GAACH,CAAL;AAAO;;AAAhB,CAA1C,EAA4D,CAA5D;;AACT,IAAGF,MAAM,CAACqU,MAAV,EAAkB;AAEdC,WAAS,CAAC,oBAAD,EAAuB,YAAY,CAC3C,CADQ,CAAT;AAEH,C;;;;;;;;;;;ACLDtU,MAAM,CAACwU,OAAP,CAAe,YAAf,EAA6B,YAAY;AACvC,MAAI,KAAKtR,MAAT,EAAiB;AACf,WAAOlD,MAAM,CAACwK,KAAP,CAAa9C,IAAb,CAAkB;AACvBxC,SAAG,EAAE,KAAKhC;AADa,KAAlB,EAEJ;AACDuR,YAAM,EAAE;AACN,kBAAU,CADJ;AAEN,mBAAW,CAFL;AAGN,oBAAY;AAHN;AADP,KAFI,CAAP;AASD,GAVD,MAUO;AACL,WAAO,KAAKC,KAAL,EAAP;AACD;AACF,CAdD,E","file":"/app.js","sourcesContent":["import {Meteor} from \"meteor/meteor\";\nimport { HTTP } from 'meteor/http';\nimport { URL } from \"url\";\nimport {chai} from 'meteor/practicalmeteor:chai';\nimport {quotedPrintableDecode} from \"emailjs-mime-codec\";\nimport {\n    OptInsCollection,\n    RecipientsCollection as Recipients,\n    httpGETdata as getHttpGETdata,\n    httpPOST as getHttpPOST,\n    getServerUrl as getUrl,\n    testLog as testLogging\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {generatetoaddress} from \"./test-api-on-node\";\n\nconst headers = { 'Content-Type':'text/plain'  };\nconst os = require('os');\nvar POP3Client = require(\"poplib\");\n\nexport function login(url, paramsLogin, log) {\n    if(log) testLogging('dApp login.');\n\n    const urlLogin = url+'/api/v1/login';\n    const headersLogin = [{'Content-Type':'application/json'}];\n    const realDataLogin= { params: paramsLogin, headers: headersLogin };\n\n    const result = getHttpPOST(urlLogin, realDataLogin);\n\n    if(log) testLogging('result login:',result);\n    const statusCode = result.statusCode;\n    const dataLogin = result.data;\n\n    const statusLogin = dataLogin.status;\n    chai.assert.equal(200, statusCode);\n    chai.assert.equal('success', statusLogin);\n    return dataLogin.data;\n}\n\nexport function requestDOI(url, auth, recipient_mail, sender_mail, data,  log) {\n    const syncFunc = Meteor.wrapAsync(request_DOI);\n    return syncFunc(url, auth, recipient_mail, sender_mail, data,  log);\n}\nfunction request_DOI(url, auth, recipient_mail, sender_mail, data,  log, callback) {\n    if(log) testLogging('step 1 - requestDOI called via REST');\n\n    const urlOptIn = url+'/api/v1/opt-in';\n    let dataOptIn = {};\n\n    if(data){\n        dataOptIn = {\n            \"recipient_mail\":recipient_mail,\n            \"sender_mail\":sender_mail,\n            \"data\":JSON.stringify(data)\n        }\n    }else{\n        dataOptIn = {\n            \"recipient_mail\":recipient_mail,\n            \"sender_mail\":sender_mail\n        }\n    }\n\n    const headersOptIn = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    };\n    try{\n        const realDataOptIn = { data: dataOptIn, headers: headersOptIn};\n        const resultOptIn = getHttpPOST(urlOptIn, realDataOptIn);\n\n        //logBlockchain(\"resultOptIn\",resultOptIn);\n        chai.assert.equal(200, resultOptIn.statusCode);\n        testLogging(\"RETURNED VALUES: \",resultOptIn);\n        if(Array.isArray(resultOptIn.data)){\n            testLogging('adding coDOIs');\n            resultOptIn.data.forEach(element => {\n                chai.assert.equal('success', element.status);\n            });\n        }\n\n        else{\n            testLogging('adding DOI');\n            chai.assert.equal('success',  resultOptIn.data.status);\n        }\n        callback(null,resultOptIn.data);\n    }\n    catch(e){\n        callback(e,null);\n    }\n}\n\nexport function getNameIdOfRawTransaction(url, auth, txId) {\n    testLogging('pre-start of getNameIdOfRawTransaction',txId);\n    const syncFunc = Meteor.wrapAsync(get_nameid_of_raw_transaction);\n    return syncFunc(url, auth, txId);\n}\n\nfunction get_nameid_of_raw_transaction(url, auth, txId, callback){\n\n    let nameId = '';\n    let running = true;\n    let counter = 0;\n    testLogging('start getNameIdOfRawTransaction',txId);\n    (async function loop() {\n        while(running && ++counter<1500){ //trying 50x to get email from bobs mailbox\n            try{\n                    testLogging('trying to get transaction',txId);\n                    const dataGetRawTransaction = {\"jsonrpc\": \"1.0\", \"id\":\"getrawtransaction\", \"method\": \"getrawtransaction\", \"params\": [txId,1] };\n                    const realdataGetRawTransaction = { auth: auth, data: dataGetRawTransaction, headers: headers };\n                    const resultGetRawTransaction = getHttpPOST(url, realdataGetRawTransaction);\n\n                    if(resultGetRawTransaction.data.result.vout[1].scriptPubKey.nameOp!==undefined){\n                        nameId = resultGetRawTransaction.data.result.vout[1].scriptPubKey.nameOp.name;\n                    }\n                    else{\n                        nameId = resultGetRawTransaction.data.result.vout[0].scriptPubKey.nameOp.name;\n                    }\n\n                    if(resultGetRawTransaction.data.result.txid!==undefined){\n                        testLogging('confirmed txid:'+resultGetRawTransaction.data.result.txid);\n                        running=false;\n                    }\n                    //chai.assert.equal(txId, resultGetRawTransaction.data.result.txid);\n            }catch(ex){\n                testLogging('trying to get email - so far no success:',counter);\n                await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n        }\n        testLogging('end of getNameIdOfRawTransaction returning nameId',nameId);\n        callback(null,nameId);\n    })();\n}\n\nexport function getNameIdOfOptInFromRawTx(url, auth, optInId,log) {\n    const syncFunc = Meteor.wrapAsync(get_nameid_of_optin_from_rawtx);\n    return syncFunc(url, auth, optInId,log);\n}\n\n\nasync function get_nameid_of_optin_from_rawtx(url, auth, optInId, log, callback){\n    testLogging('step 2 - getting nameId of raw transaction from blockchain');\n    if(log) testLogging('the txId will be added a bit later as soon as the schedule picks up the job and inserts it into the blockchain. it does not happen immediately. waiting...');\n    let running = true;\n    let counter = 0;\n    let our_optIn = null;\n    let nameId = null;\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get opt-in\n\n            testLogging('find opt-In',optInId);\n            our_optIn = OptInsCollection.findOne({_id: optInId});\n            if(our_optIn.txId!==undefined){\n                testLogging('found txId of opt-In',our_optIn.txId);\n                running = false;\n            }\n            else{\n                testLogging('did not find txId yet for opt-In-Id',our_optIn._id);\n            }\n\n            await new Promise(resolve => setTimeout(resolve, 3000));\n        }\n    })();\n\n    try{\n\n        chai.assert.equal(our_optIn._id,optInId);\n        if(log) testLogging('optIn:',our_optIn);\n        nameId = getNameIdOfRawTransaction(url,auth,our_optIn.txId);\n        chai.assert.equal(\"e/\"+our_optIn.nameId,nameId);\n\n        if(log) testLogging('nameId:',nameId);\n        chai.assert.notEqual(nameId,null);\n        chai.assert.isBelow(counter,50,\"OptIn not found after retries\");\n        callback(null,nameId);\n    }\n    catch(error){\n        callback(error,nameId);\n    }\n}\nexport function fetchConfirmLinkFromPop3Mail(hostname,port,username,password,alicedapp_url,log,mail_test_string=\"\") {\n    const syncFunc = Meteor.wrapAsync(fetch_confirm_link_from_pop3_mail);\n    return syncFunc(hostname,port,username,password,alicedapp_url,log,mail_test_string);\n}\n\nfunction fetch_confirm_link_from_pop3_mail(hostname,port,username,password,alicedapp_url,log,mail_test_string,callback) {\n\n    testLogging(\"step 3 - getting email from bobs inbox\");\n    //https://github.com/ditesh/node-poplib/blob/master/demos/retrieve-all.js\n    var client = new POP3Client(port, hostname, {\n        tlserrs: false,\n        enabletls: false,\n        debug: false\n    });\n\n    client.on(\"connect\", function() {\n        testLogging(\"CONNECT success\");\n        client.login(username, password);\n        client.on(\"login\", function(status, rawdata) {\n            if (status) {\n                testLogging(\"LOGIN/PASS success\");\n                client.list();\n\n                client.on(\"list\", function(status, msgcount, msgnumber, data, rawdata) {\n\n                    if (status === false) {\n                        const err = \"LIST failed\"+ msgnumber;\n                        client.rset();\n                        callback(err, null);\n                        return;\n                    } else {\n                        if(log) testLogging(\"LIST success with \" + msgcount + \" element(s)\",'');\n\n                        //chai.expect(msgcount).to.be.above(0, 'no email in bobs inbox');\n                        if (msgcount > 0){\n                            client.retr(1);\n                            client.on(\"retr\", function(status, msgnumber, maildata, rawdata) {\n\n                                if (status === true) {\n                                    if(log) testLogging(\"RETR success \" + msgnumber);\n\n                                    //https://github.com/emailjs/emailjs-mime-codec\n                                    let html  = quotedPrintableDecode(maildata);\n                                    if(os.hostname()!=='regtest'){ //this is probably a selenium test from outside docker  - so replace URL so it can be confirmed\n                                        html = replaceAll(html,'http://172.20.0.8','http://localhost');  //TODO put this IP inside a config\n                                    }\n                                    let linkdata = null;\n                                    chai.expect(html.indexOf(alicedapp_url),\"dappUrl not found in email\").to.not.equal(-1);\n                                    linkdata =  html.substring(html.indexOf(alicedapp_url)).match(/^(https?|ftp):\\/\\/[^\\s/$.?#].[^\\s]*[a-z,A-Z,0-9]{16,}/)[0];\n\n                                    chai.expect(linkdata,\"no linkdata found\").to.not.be.null;\n\n                                    if(mail_test_string)chai.expect(html.indexOf(mail_test_string),'teststring: \"'+mail_test_string+'\" not found').to.not.equal(-1);\n                                    const requestData = {\"linkdata\":linkdata,\"html\":html}\n\n                                    client.dele(msgnumber);\n                                    client.on(\"dele\", function(status, msgnumber, data, rawdata) {\n                                        client.quit();\n\n                                        client.end();\n                                        client = null;\n                                        callback(null,linkdata);\n                                    });\n\n                                } else {\n                                    const err = \"RETR failed for msgnumber \"+ msgnumber;\n                                    client.rset();\n                                    client.end();\n                                    client = null;\n                                    callback(err, null);\n                                    return;\n                                }\n                            });\n                        }\n                        else{\n                            const err = \"empty mailbox\";\n                            callback(err, null);\n                            client.quit();\n                            client.end();\n                            client = null;\n                            return;\n                        }\n                    }\n                });\n\n            } else {\n                const err = \"LOGIN/PASS failed\";\n                callback(err, null);\n                client.quit();\n                client.end();\n                client = null;\n                return;\n            }\n        });\n    });\n}\n\nfunction replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace);\n}\n\nexport function deleteAllEmailsFromPop3(hostname,port,username,password,log) {\n    const syncFunc = Meteor.wrapAsync(delete_all_emails_from_pop3);\n    return syncFunc(hostname,port,username,password,log);\n}\n\nfunction delete_all_emails_from_pop3(hostname,port,username,password,log,callback) {\n\n    testLogging(\"deleting all emails from bobs inbox\");\n    //https://github.com/ditesh/node-poplib/blob/master/demos/retrieve-all.js\n    var client = new POP3Client(port, hostname, {\n        tlserrs: false,\n        enabletls: false,\n        debug: false\n    });\n\n    client.on(\"connect\", function() {\n        testLogging(\"CONNECT success\");\n        client.login(username, password);\n        client.on(\"login\", function(status, rawdata) {\n            if (status) {\n                testLogging(\"LOGIN/PASS success\");\n                client.list();\n\n                client.on(\"list\", function(status, msgcount, msgnumber, data, rawdata) {\n\n                    if (status === false) {\n                        const err = \"LIST failed\"+ msgnumber;\n                        client.rset();\n                        callback(err, null);\n                        return;\n                    } else {\n                        if(log) testLogging(\"LIST success with \" + msgcount + \" element(s)\",'');\n\n                        //chai.expect(msgcount).to.be.above(0, 'no email in bobs inbox');\n                        if (msgcount > 0){\n                            for(let i = 0;i<=msgcount;i++){\n                                client.dele(i+1);\n                                client.on(\"dele\", function(status, msgnumber, data, rawdata) {\n                                    testLogging(\"deleted email\"+(i+1)+\" status:\"+status);\n                                   if(i==msgcount-1){\n                                       client.quit();\n\n                                       client.end();\n                                       client = null;\n                                       if(log) testLogging(\"all emails deleted\");\n                                       callback(null,'all emails deleted');\n                                   }\n                                });\n                            }\n                        }\n                        else{\n                            const err = \"empty mailbox\";\n                            callback(null, err); //we do not send an error here when inbox is empty\n                            client.quit();\n                            client.end();\n                            client = null;\n                            return;\n                        }\n                    }\n                });\n\n            } else {\n                const err = \"LOGIN/PASS failed\";\n                callback(err, null);\n                client.quit();\n                client.end();\n                client = null;\n                return;\n            }\n        });\n    });\n}\n\nexport function clickConfirmLink(confirmLink) {\n    const syncFunc = Meteor.wrapAsync(confirm_link);\n    return syncFunc(confirmLink);\n}\n\nfunction confirm_link(confirmlink,callback){\n    testLogging(\"clickable link:\",confirmlink);\n    const doiConfirmlinkRedir = HTTP.get(confirmlink,{followRedirects:false});\n    let redirLocation = doiConfirmlinkRedir.headers.location;\n\n    if(!redirLocation.startsWith(\"http://\") && !redirLocation.startsWith(\"https://\")){\n        redirLocation = getUrl()+\"templates/pages/\"+redirLocation;\n        testLogging('redirectUrl:',redirLocation);\n    }\n\n    const doiConfirmlinkResult = HTTP.get(redirLocation);\n    testLogging(\"Response location:\",redirLocation);\n    try{\n        if(doiConfirmlinkResult.content.indexOf(\"Hello world!\")==-1){\n            //    chai.expect(doiConfirmlinkResult.content.indexOf(\"ANMELDUNG ERFOLGREICH\")).to.not.equal(-1);\n            chai.expect(doiConfirmlinkResult.content).to.have.string('ANMELDUNG ERFOLGREICH');\n            chai.expect(doiConfirmlinkResult.content).to.have.string('Vielen Dank fÃ¼r Ihre Anmeldung');\n            chai.expect(doiConfirmlinkResult.content).to.have.string('Ihre Anmeldung war erfolgreich.');\n        }\n        else{\n            chai.expect(doiConfirmlinkResult.content.indexOf(\"Hello world!\")).to.not.equal(-1);\n        }\n        chai.assert.equal(200, doiConfirmlinkResult.statusCode);\n        callback(null,{location: redirLocation});\n    }\n    catch(e){\n        callback(e,null);\n    }\n}\n\nexport function verifyDOI(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log ){\n    const syncFunc = Meteor.wrapAsync(verify_doi);\n    return syncFunc(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log );\n}\n\n\nasync function verify_doi(dAppUrl, dAppUrlAuth, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail,nameId, log, callback){\n    let our_recipient_mail =recipient_mail;\n    if(Array.isArray(recipient_mail)){\n        our_recipient_mail=recipient_mail[0];\n    }\n    const urlVerify = dAppUrl+'/api/v1/opt-in/verify';\n    const recipient_public_key = Recipients.findOne({email: our_recipient_mail}).publicKey;\n    let resultVerify ={};\n    let statusVerify ={};\n\n    const dataVerify = {\n        recipient_mail: our_recipient_mail,\n        sender_mail: sender_mail,\n        name_id: nameId,\n        recipient_public_key: recipient_public_key\n    };\n\n    const headersVerify = {\n        'Content-Type':'application/json',\n        'X-User-Id':dAppUrlAuth.userId,\n        'X-Auth-Token':dAppUrlAuth.authToken\n    };\n    let running = true;\n    let counter = 0;\n\n    await (async function loop() {\n        while(running && ++counter<50){ //trying 50x to get email from bobs mailbox\n            try{\n                testLogging('Step 5: verifying opt-in:', {data:dataVerify});\n                const realdataVerify = { data: dataVerify, headers: headersVerify };\n                resultVerify = getHttpGETdata(urlVerify, realdataVerify);\n                testLogging('result /opt-in/verify:',{status:resultVerify.data.status,val:resultVerify.data.data.val} );\n                statusVerify = resultVerify.statusCode;\n                if(resultVerify.data.data.val===true) running = false;\n\n            }catch(ex) {\n                testLogging('trying to verify opt-in - so far no success:',ex);\n                //generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n                //await new Promise(resolve => setTimeout(resolve, 2000));\n            }\n            finally{\n                generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n                await new Promise(resolve => setTimeout(resolve, 2000)); \n            }\n        }\n\n    })();\n        try{\n            chai.assert.equal(statusVerify,200);\n            chai.assert.equal(resultVerify.data.data.val,true);\n            chai.assert.isBelow(counter,50);\n            callback(null,true);\n        }\n        catch(error){\n            callback(error,false);\n        }\n}\n\nexport function createUser(url,auth,username,templateURL,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    }\n    const mailTemplate = {\n        \"subject\": \"Hello i am \"+username,\n        \"redirect\": \"thank-you-de.html\",\n        \"returnPath\":  username+\"-test@doichain.org\",\n        \"templateURL\": templateURL\n    }\n    const urlUsers = url+'/api/v1/users';\n    const dataUser = {\"username\":username,\"email\":username+\"-test@doichain.org\",\"password\":\"password\",\"mailTemplate\":mailTemplate}\n\n    const realDataUser= { data: dataUser, headers: headersUser};\n    if(log) testLogging('createUser:', realDataUser);\n    let res = getHttpPOST(urlUsers,realDataUser);\n    if(log) testLogging(\"response\",res);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    return res.data.data.userid;\n}\n\nexport function findUser(userId){\n    const res = Accounts.users.findOne({_id:userId});\n    chai.expect(res).to.not.be.undefined;\n    return res;\n}\n\nexport function findOptIn(optInId,log){\n    const res = OptInsCollection.findOne({_id:optInId});\n    if(log)testLogging(res,optInId);\n    chai.expect(res).to.not.be.undefined;\n    return res;\n}\n\nexport function exportOptIns(url,auth,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    };\n\n    const urlExport = url+'/api/v1/export';\n    const realDataUser= {headers: headersUser};\n    let res = getHttpGETdata(urlExport,realDataUser);\n    if(log) testLogging(res,log);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    return res.data.data;\n}\n\n\nexport function requestConfirmVerifyBasicDoi(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,dappUrlBob,recipient_mail,sender_mail,optionalData,recipient_pop3username, recipient_pop3password, log,mail_test_string=\"\") {\n    const syncFunc = Meteor.wrapAsync(request_confirm_verify_basic_doi);\n    return syncFunc(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,dappUrlBob, recipient_mail,sender_mail,optionalData,recipient_pop3username, recipient_pop3password, log,mail_test_string);\n}\n\n\nasync function request_confirm_verify_basic_doi(node_url_alice,rpcAuthAlice, dappUrlAlice,dataLoginAlice,\n                                                dappUrlBob, recipient_mail,sender_mail_in,optionalData,recipient_pop3username, recipient_pop3password, log,mail_test_string, callback) {\n    if(log) testLogging('node_url_alice',node_url_alice);\n    if(log) testLogging('rpcAuthAlice',rpcAuthAlice);\n    if(log) testLogging('dappUrlAlice',dappUrlAlice);\n    if(log) testLogging('dataLoginAlice',dataLoginAlice);\n    if(log) testLogging('dappUrlBob',dappUrlBob);\n    if(log) testLogging('recipient_mail',recipient_mail);\n    if(log) testLogging('sender_mail_in',sender_mail_in);\n    if(log) testLogging('optionalData',optionalData);\n    if(log) testLogging('recipient_pop3username',recipient_pop3username);\n    if(log) testLogging('recipient_pop3password',recipient_pop3password);\n\n\n    let sender_mail = sender_mail_in;\n    if(log) testLogging('log into alice and request DOI');\n    let resultDataOptInTmp = requestDOI(dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, optionalData, true);\n    let resultDataOptIn = resultDataOptInTmp;\n\n    if(Array.isArray(sender_mail_in)){              //Select master doi from senders and result\n        if(log) testLogging('MASTER DOI: ',resultDataOptInTmp[0]);\n        resultDataOptIn = resultDataOptInTmp[0];\n        sender_mail = sender_mail_in[0];\n    }\n\n    //generating a block so transaction gets confirmed and delivered to bob.\n    generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n    let running = true;\n    let counter = 0;\n    let confirmedLink = \"\";\n    let lastError=null;\n    confirmedLink = await(async function loop() {\n        while(running && ++counter<50){ //trying 50x to get email from bobs mailbox\n            try{\n                testLogging('step 3: getting email from hostname!',os.hostname());\n                const link2Confirm = fetchConfirmLinkFromPop3Mail((os.hostname()=='regtest')?'mail':'localhost', 110, recipient_pop3username, recipient_pop3password, dappUrlBob, false);\n                testLogging('step 4: confirming link',link2Confirm);\n                if(link2Confirm!=undefined){running=false;\n                confirmedLink=link2Confirm;\n                testLogging('confirmed');\n                return link2Confirm;\n                }\n            }catch(ex){\n                lastError=ex;\n                testLogging('trying to get email - so far no success:',ex);\n                testLogging('trying to get email - so far no success:',counter);\n                await new Promise(resolve => setTimeout(resolve, 3000));\n            }\n        }\n\n    })();\n\n  /*  if(os.hostname()!=='regtest'){ //if this is a selenium test from outside docker - don't verify DOI here for simplicity\n        testLogging('returning to test without DOI-verification while doing selenium outside docker');\n        callback(null, {status: \"DOI confirmed\"});\n        // return;\n    }else{*/\n        let nameId=null;\n        try{\n            if(counter>=50){\n                throw lastError;\n            }\n            testLogging('step 4: confirming link',confirmedLink);\n            //Checking the redirect-parameters after confirming link\n            let redirLink = clickConfirmLink(confirmedLink);\n            if(optionalData && optionalData.redirectParam){\n                testLogging('step 4.5: redirectLink after confirmation in case of optional data',{optionalData:optionalData,redirLink:redirLink});\n                testLogging('redirLink.location:',redirLink.location);\n                let redirUrl = new URL(redirLink.location);\n                testLogging(\"Checking for redirect params:\",optionalData.redirectParam)\n                Object.keys(optionalData.redirectParam).forEach(function(key){\n                    chai.assert.isTrue(redirUrl.searchParams.has(key));\n                    chai.assert.equal(redirUrl.searchParams.get(key),\"\"+optionalData.redirectParam[key]);\n                });\n            }\n\n            chai.assert.isBelow(counter,50);\n            //confirmLink(confirmedLink);\n            const nameId = getNameIdOfOptInFromRawTx(node_url_alice,rpcAuthAlice,resultDataOptIn.data.id,true);\n            if(log) testLogging('got nameId',nameId);\n            generatetoaddress(node_url_alice, rpcAuthAlice, global.aliceAddress, 1, true);\n            testLogging('before verification');\n            \n            if(Array.isArray(sender_mail_in)){\n                for (let index = 0; index < sender_mail_in.length; index++) {\n                    let tmpId = index==0 ? nameId : nameId+\"-\"+(index); //get nameid of coDOIs based on master\n                    testLogging(\"NameId of coDoi: \",tmpId);\n                    verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuthAlice, sender_mail_in[index], recipient_mail, tmpId, true);\n                }\n            }\n            else{\n                verifyDOI(dappUrlAlice, dataLoginAlice, node_url_alice, rpcAuthAlice, sender_mail, recipient_mail, nameId, true); //need to generate two blocks to make block visible on alice\n            }\n            testLogging('after verification');\n            //confirmLink(confirmedLink);\n            callback(null, {optIn: resultDataOptIn, nameId: nameId,confirmLink: confirmedLink});\n        }\n        catch(error){\n            callback(error, {optIn: resultDataOptIn, nameId: nameId});\n        }\n    //}\n\n\n}\n\nexport function updateUser(url,auth,updateId,mailTemplate,log){\n    const headersUser = {\n        'Content-Type':'application/json',\n        'X-User-Id':auth.userId,\n        'X-Auth-Token':auth.authToken\n    }\n\n    const dataUser = {\"mailTemplate\":mailTemplate};\n    if(log) testLogging('url:', url);\n    const urlUsers = url+'/api/v1/users/'+updateId;\n    const realDataUser= { data: dataUser, headers: headersUser};\n    if(log) testLogging('updateUser:', realDataUser);\n    let res = HTTP.put(urlUsers,realDataUser);\n    if(log) testLogging(\"response\",res);\n    chai.assert.equal(200, res.statusCode);\n    chai.assert.equal(res.data.status,\"success\");\n    const usDat = Accounts.users.findOne({_id:updateId}).profile.mailTemplate;\n    if(log) testLogging(\"InputTemplate\",dataUser.mailTemplate);\n    if(log) testLogging(\"ResultTemplate\",usDat);\n    chai.expect(usDat).to.not.be.undefined;\n    chai.assert.equal(dataUser.mailTemplate.templateURL,usDat.templateURL);\n    return usDat;\n}\n\nexport function resetUsers(){\n    Accounts.users.remove(\n        {\"username\":\n                {\"$ne\":\"admin\"}\n        }\n    );\n}\n","import {\n    httpPOST as getHttpPOST,\n    testLog as testLogging,\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {chai} from 'meteor/practicalmeteor:chai';\nimport {Meteor} from \"meteor/meteor\";\nconst os = require('os');\nlet sudo = (os.hostname()=='regtest')?'sudo ':''\nconst headers = { 'Content-Type':'text/plain'  };\nconst exec = require('child_process').exec;\n\nexport function initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyAlice,privKeyBob,log) {            //connect nodes (alice & bob) and generate DOI (only if not connected)\n\n    testLogging(\"importing private key of Alice:\"+privKeyAlice);\n    importPrivKey(node_url_alice, rpcAuth, privKeyAlice, true, log);\n\n    testLogging(\"importing private key of Bob:\"+privKeyBob);\n    importPrivKey(node_url_bob, rpcAuth, privKeyBob, true, log);\n\n    try {\n        const aliceContainerId = getContainerIdOfName('alice');\n        const statusDocker = JSON.parse(getDockerStatus(aliceContainerId));\n        logBlockchain(\"real balance :\" + statusDocker.balance, (Number(statusDocker.balance) > 0));\n        logBlockchain(\"connections:\" + statusDocker.connections);\n        if (Number(statusDocker.connections) == 0) {\n            isNodeAlive(node_url_alice, rpcAuth, log);\n            isNodeAliveAndConnectedToHost(node_url_bob, rpcAuth, 'alice', log);\n        }\n\n        if (Number(statusDocker.balance) > 0) {\n            logBlockchain(\"enough founding for alice - blockchain already connected\");\n            global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, log);\n            return;\n        }\n    } catch (exception) {\n        logBlockchain(\"connecting blockchain and mining some coins\");\n    }\n    global.aliceAddress = getNewAddress(node_url_alice, rpcAuth, log);\n    generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 210);  //110 blocks to new address! 110 blÃ¶cke *25 coins\n\n}\nfunction wait_to_start_container(startedContainerId,callback){\n    let running = true;\n    let counter = 0;\n\n    //here we make sure bob gets started and connected again in probably all possible sitautions\n    while(running){\n        try{\n            const statusDocker = JSON.parse(getDockerStatus(startedContainerId));\n            testLogging(\"getinfo\",statusDocker);\n            testLogging(\"version:\"+statusDocker.version);\n            testLogging(\"balance:\"+statusDocker.balance);\n            testLogging(\"connections:\"+statusDocker.connections);\n            if(statusDocker.connections===0){\n                doichainAddNode(startedContainerId);\n            }\n            running = false;\n        }\n        catch(error){\n            testLogging(\"statusDocker problem trying to start Bobs node inside docker container:\",error);\n            try{\n                connectDockerBob(startedContainerId);\n            }catch(error2){\n                testLogging(\"could not start bob:\",error2);\n            }\n            if(counter==50)running=false;\n        }\n        counter++;\n    }\n    callback(null, startedContainerId);\n}\n\nfunction delete_options_from_alice_and_bob(callback){\n\n    const containerId = getContainerIdOfName('mongo');\n    testLogging('containerId of mongo:',containerId);\n\n    exec((global.inside_docker?'sudo':'')+ 'docker exec '+containerId+' bash -c \"mongo < /tmp/delete_collections.sh\"', (e, stdout, stderr)=> {\n        testLogging((global.inside_docker?'sudo':'')+'docker exec ',{stderr:stderr,stdout:stdout});\n        callback(stderr, stdout);\n    });\n\n}\n\nexport function isNodeAlive(url, auth, log) {\n    if(log) testLogging('isNodeAlive called to url',url);\n    const dataGetNetworkInfo = {\"jsonrpc\": \"1.0\", \"id\": \"getnetworkinfo\", \"method\": \"getnetworkinfo\", \"params\": []};\n    const realdataGetNetworkInfo = {auth: auth, data: dataGetNetworkInfo, headers: headers};\n    const resultGetNetworkInfo = getHttpPOST(url, realdataGetNetworkInfo);\n    const statusGetNetworkInfo = resultGetNetworkInfo.statusCode;\n    chai.assert.equal(200, statusGetNetworkInfo);\n    if(log)\n        testLogging('resultGetNetworkInfo:',resultGetNetworkInfo); // getnetworkinfo | jq '.localaddresses[0].address'\n}\n\nexport function isNodeAliveAndConnectedToHost(url, auth, host, log) {\n    if(log) testLogging('isNodeAliveAndConnectedToHost called');\n    isNodeAlive(url, auth, log);\n\n    const dataGetNetworkInfo = {\"jsonrpc\": \"1.0\", \"id\":\"addnode\", \"method\": \"addnode\", \"params\": ['alice','onetry'] };\n    const realdataGetNetworkInfo = { auth: auth, data: dataGetNetworkInfo, headers: headers };\n    const resultGetNetworkInfo = getHttpPOST(url, realdataGetNetworkInfo);\n    const statusAddNode = resultGetNetworkInfo.statusCode;\n    if(log) testLogging('addnode:',statusAddNode);\n    chai.assert.equal(200, statusAddNode);\n\n\n    const dataGetPeerInfo = {\"jsonrpc\": \"1.0\", \"id\":\"getpeerinfo\", \"method\": \"getpeerinfo\", \"params\": [] };\n    const realdataGetPeerInfo = { auth: auth, data: dataGetPeerInfo, headers: headers };\n    const resultGetPeerInfo = getHttpPOST(url, realdataGetPeerInfo);\n    const statusGetPeerInfo = resultGetPeerInfo.statusCode;\n    if(log) testLogging('resultGetPeerInfo:',resultGetPeerInfo);\n    chai.assert.equal(200, statusGetPeerInfo);\n    chai.assert.isAbove(resultGetPeerInfo.data.result.length, 0, 'no connection to other nodes! ');\n    //chai.expect(resultGetPeerInfo.data.result).to.have.lengthOf.at.least(1);\n\n}\n\nexport function importPrivKey(url, auth, privKey, rescan, log) {\n        if(log) testLogging('importPrivKey called','');\n        const data_importprivkey = {\"jsonrpc\": \"1.0\", \"id\":\"importprivkey\", \"method\": \"importprivkey\", \"params\": [privKey] };\n        const realdata_importprivkey = { auth: auth, data: data_importprivkey, headers: headers };\n        const result = getHttpPOST(url, realdata_importprivkey);\n        if(log) testLogging('result:',result);\n}\n\nexport function getNewAddress(url, auth, log) {\n\n    if(log) testLogging('getNewAddress called');\n    const dataGetNewAddress = {\"jsonrpc\": \"1.0\", \"id\":\"getnewaddress\", \"method\": \"getnewaddress\", \"params\": [] };\n    const realdataGetNewAddress = { auth: auth, data: dataGetNewAddress, headers: headers };\n    const resultGetNewAddress = getHttpPOST(url, realdataGetNewAddress);\n    const statusOptInGetNewAddress = resultGetNewAddress.statusCode;\n    const newAddress  = resultGetNewAddress.data.result;\n    chai.assert.equal(200, statusOptInGetNewAddress);\n    chai.expect(resultGetNewAddress.data.error).to.be.null;\n    chai.expect(newAddress).to.not.be.null;\n    if(log) testLogging(newAddress);\n    return newAddress;\n}\n\nexport function generatetoaddress(url,auth,toaddress,amount,log){\n    const dataGenerate = {\"jsonrpc\": \"1.0\", \"id\":\"generatetoaddress\", \"method\": \"generatetoaddress\", \"params\": [amount,toaddress] };\n    const headersGenerates = { 'Content-Type':'text/plain'  };\n    const realdataGenerate = { auth: auth, data: dataGenerate, headers: headersGenerates };\n    const resultGenerate = getHttpPOST(url, realdataGenerate);\n    const statusResultGenerate = resultGenerate.statusCode;\n    if(log)testLogging('statusResultGenerate:',statusResultGenerate);\n    chai.assert.equal(200, statusResultGenerate);\n    chai.expect(resultGenerate.data.error).to.be.null;\n    chai.expect(resultGenerate.data.result).to.not.be.null;\n}\n\nexport function getBalance(url,auth,log){\n    const dataGetBalance = {\"jsonrpc\": \"1.0\", \"id\":\"getbalance\", \"method\": \"getbalance\", \"params\": [] };\n    const realdataGetBalance = { auth: auth, data: dataGetBalance, headers: headers };\n    const resultGetBalance = getHttpPOST(url, realdataGetBalance);\n    if(log)testLogging('resultGetBalance:',resultGetBalance.data.result);\n    return resultGetBalance.data.result;\n}\n\nfunction get_container_id_of_name(name,callback) {\n    exec(sudo+'docker ps --filter \"name='+name+'\" -q', (e, stdout, stderr)=> {\n        if(e!=null){\n            testLogging('cannot find '+name+' node '+stdout,stderr);\n            return null;\n        }\n        const bobsContainerId = stdout.toString().trim(); //.substring(0,stdout.toString().length-1); //remove last char since ins a line break\n        callback(stderr, bobsContainerId);\n    });\n}\n\nfunction stop_docker_bob(callback) {\n    const bobsContainerId = getContainerIdOfName('bob');\n    testLogging('stopping Bob with container-id: '+bobsContainerId);\n    try{\n        exec(sudo+'docker stop '+bobsContainerId, (e, stdout, stderr)=> {\n            testLogging('stopping Bob with container-id: ',{stdout:stdout,stderr:stderr});\n            callback(null, bobsContainerId);\n        });\n    }catch (e) {\n        testLogging('couldnt stop bobs node',e);\n    }\n}\n\nfunction doichain_add_node(containerId,callback) {\n    exec(sudo+'docker exec '+containerId+' doichain-cli addnode alice onetry', (e, stdout, stderr)=> {\n        testLogging('bob '+containerId+' connected? ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction get_docker_status(containerId,callback) {\n    logBlockchain('containerId '+containerId+' running? ');\n    exec(sudo+'docker exec '+containerId+' doichain-cli -getinfo', (e, stdout, stderr)=> {\n        testLogging('containerId '+containerId+' status: ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction start_docker_bob(bobsContainerId,callback) {\n    exec(sudo+'docker start '+bobsContainerId, (e, stdout, stderr)=> {\n        testLogging('started bobs node again: '+bobsContainerId,{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout.toString().trim()); //remove line break from the end\n    });\n}\n\nfunction connect_docker_bob(bobsContainerId, callback) {\n    exec(sudo+'docker exec '+bobsContainerId+' doichaind -regtest -daemon -reindex -addnode=alice', (e, stdout, stderr)=> {\n        testLogging('restarting doichaind on bobs node and connecting with alice: ',{stdout:stdout,stderr:stderr});\n        callback(stderr, stdout);\n    });\n}\n\nfunction start_3rd_node(callback) {\n    exec(sudo+'docker start 3rd_node', (e, stdout, stderr)=> {\n        testLogging('trying to start 3rd_node',{stdout:stdout,stderr:stderr});\n        if(stderr){\n            exec(sudo+'docker network ls |grep doichain | cut -f9 -d\" \"', (e, stdout, stderr)=> {\n                const network = stdout.toString().substring(0,stdout.toString().length-1);\n                testLogging('connecting 3rd node to docker network: '+network);\n                exec(sudo+'docker run --expose=18332 ' +\n                    '-e REGTEST=true ' +\n                    '-e DOICHAIN_VER=0.16.3.2 ' +\n                    '-e RPC_ALLOW_IP=::/0 ' +\n                    '-e CONNECTION_NODE=alice '+\n                    '-e RPC_PASSWORD=generated-password ' +\n                    '--name=3rd_node '+\n                    '--dns=172.20.0.5  ' +\n                    '--dns=8.8.8.8 ' +\n                    '--dns-search=ci-doichain.org ' +\n                    '--ip=172.20.0.10 ' +\n                    '--network='+network+' -d doichain/core:0.16.3.2', (e, stdout, stderr)=> {\n                    callback(stderr, stdout);\n                });\n            });\n        }else{\n            callback(stderr, stdout);\n        }\n    });\n\n\n}\n\nfunction run_and_wait(runfunction,seconds, callback){\n    Meteor.setTimeout(function () {\n        runfunction();\n        callback(null,true);\n    }, seconds+1000);\n}\n\nexport function waitToStartContainer(containerId) {\n    const syncFunc = Meteor.wrapAsync(wait_to_start_container);\n    return syncFunc(containerId);\n}\n\nexport function deleteOptInsFromAliceAndBob() {\n    const syncFunc = Meteor.wrapAsync(delete_options_from_alice_and_bob);\n    return syncFunc();\n}\n\nexport function start3rdNode() {\n    const syncFunc = Meteor.wrapAsync(start_3rd_node);\n    return syncFunc();\n}\n\nexport function stopDockerBob() {\n    const syncFunc = Meteor.wrapAsync(stop_docker_bob);\n    return syncFunc();\n}\n\nexport function getContainerIdOfName(name) {\n    const syncFunc = Meteor.wrapAsync(get_container_id_of_name);\n    return syncFunc(name);\n}\n\nexport function startDockerBob(containerId) {\n    const syncFunc = Meteor.wrapAsync(start_docker_bob);\n    return syncFunc(containerId);\n}\n\nexport function doichainAddNode(containerId) {\n    const syncFunc = Meteor.wrapAsync(doichain_add_node);\n    return syncFunc(containerId);\n}\n\nexport function getDockerStatus(containerId) {\n    const syncFunc = Meteor.wrapAsync(get_docker_status);\n    return syncFunc(containerId);\n}\n\nexport function connectDockerBob(containerId) {\n    const syncFunc = Meteor.wrapAsync(connect_docker_bob);\n    return syncFunc(containerId);\n}\n\nexport function runAndWait(runfunction, seconds) {\n    const syncFunc = Meteor.wrapAsync(run_and_wait);\n    return syncFunc(seconds);\n}","import {chai} from 'meteor/practicalmeteor:chai';\nimport { testLog } from \"meteor/doichain:doichain-meteor-api\";\nimport {\n    deleteOptInsFromAliceAndBob, getBalance, initBlockchain\n} from \"./test-api/test-api-on-node\";\n\nglobal.inside_docker = false;\n\nconst log = true;\nconst dns = require('dns');\ndns.setServers([\n    '127.0.0.1',\n]); //we use our own dns in order to resolve the ci-doichain.org test domain including its TXT entry\n\nglobal.node_url_alice = 'http://172.20.0.6:18332/';\nif(!global.inside_docker) global.node_url_alice = 'http://localhost:18543/';\nglobal.node_url_bob =   'http://172.20.0.7:18332/';\nif(!global.inside_docker) global.node_url_bob = 'http://localhost:18544/';\nglobal.rpcAuthAlice = \"admin:generated-password\";\nglobal.rpcAuth = \"admin:generated-password\";\n\nglobal.privKeyAlice = \"cNEuvnaPVkW7Xp3JS49k9aSqMBe4LSyws3aq1KvCU1utSDLtT9Dj\";\nglobal.privKeyBob = \"cP3EigkzsWuyKEmxk8cC6qXYb4ZjwUo5vzvZpAPmDQ83RCgXQruj\";\n\nglobal.dappUrlAlice = \"http://localhost:3000\";\nglobal.dappUrlBob = global.insde_docker?\"http://172.20.0.8:4000\":\"http://localhost:4000\";\nglobal.dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\n\nif(Meteor.isAppTest) {\n    describe('basic-doi-test-0', function () {\n        this.timeout(0);\n\n        before(function () {\n            testLog(\"removing OptIns,Recipients,Senders\",'');\n            deleteOptInsFromAliceAndBob();\n        });\n\n        it('should create a RegTest Doichain with alice and bob and some Doi - coins', function () {\n            initBlockchain(global.node_url_alice,global.node_url_bob,global.rpcAuth,global.privKeyAlice,global.privKeyBob,true);\n            const aliceBalance = getBalance(global.node_url_alice, global.rpcAuth, log);\n            chai.assert.isAbove(aliceBalance, 0, 'no funding! ');\n        });\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    login,\n    createUser,\n    findUser,\n    exportOptIns,\n    requestConfirmVerifyBasicDoi, resetUsers, updateUser, deleteAllEmailsFromPop3, confirmLink, clickConfirmLink\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\n\nimport {deleteOptInsFromAliceAndBob} from \"./test-api/test-api-on-node\";\n\nlet templateUrlA=\"http://172.20.0.8:4000/templates/emails/doichain-anmeldung-final-DE.html\";\nlet templateUrlB=\"http://172.20.0.8:4000/templates/emails/doichain-anmeldung-final-EN.html\";\nif(!global.inside_docker){\n    templateUrlA=\"http://localhost:4000/templates/emails/doichain-anmeldung-final-DE.html\";\n    templateUrlB=\"http://localhost:4000/templates/emails/doichain-anmeldung-final-EN.html\";\n}\n\nconst aliceALogin = {\"username\":\"alice-a\",\"password\":\"password\"};\nconst aliceBLogin = {\"username\":\"alice-a\",\"password\":\"password\"};\n\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nconst log = true;\n\nif(Meteor.isAppTest) {\n    describe('basic-doi-test-01', function () {\n        this.timeout(0);\n\n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, true);\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {},false);\n        });\n        afterEach(function(){\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {},false);\n        });\n\n        it('should test if basic Doichain workflow is working with optional data', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice@ci-doichain.org\";\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, dataLoginAlice, global.dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n            done();\n        });\n\n        it('should test if basic Doichain workflow is working without optional data', function (done) {\n            const recipient_mail = \"alice@ci-doichain.org\"; //please use this as an alernative when above standard is not possible\n            const sender_mail = \"bob@ci-doichain.org\";\n            //login to dApp & request DOI on alice via bob\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, dataLoginAlice, global.dappUrlBob, recipient_mail, sender_mail, null, \"alice@ci-doichain.org\", \"alice\", true);\n            done();\n        });\n\n        it('should create two more users', function (done) {\n            resetUsers();\n            const logAdmin = login(global.dappUrlAlice, global.dAppLogin, false);\n            let userA = createUser(global.dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(global.dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            done();\n        });\n\n        it('should test if Doichain workflow is using different templates for different users', function (done) {\n\n            resetUsers();\n            const recipient_mail = \"bob@ci-doichain.org\"; //\n            const sender_mail_alice_a = \"alice-a@ci-doichain.org\";\n            const sender_mail_alice_b = \"alice-b@ci-doichain.org\";\n            const logAdmin = login(global.dappUrlAlice, global.dAppLogin, false);\n\n            let userA = createUser(global.dappUrlAlice, logAdmin, \"alice-a\", templateUrlA, true);\n            chai.expect(findUser(userA)).to.not.be.undefined;\n            let userB = createUser(global.dappUrlAlice, logAdmin, \"alice-b\", templateUrlB, true);\n            chai.expect(findUser(userB)).to.not.be.undefined;\n\n            const logUserA = login(global.dappUrlAlice, aliceALogin, true);\n            const logUserB = login(global.dappUrlAlice, aliceBLogin, true);\n\n            //requestConfirmVerifyBasicDoi checks if the \"log\" value (if it is a String) is in the mail-text\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice,global.dappUrlAlice, logUserA, global.dappUrlBob, recipient_mail, sender_mail_alice_a, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", \"kostenlose Anmeldung\");\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logUserB, global.dappUrlBob, recipient_mail, sender_mail_alice_b, {'city': 'Simbach'}, \"bob@ci-doichain.org\", \"bob\", \"free registration\");\n\n            done();\n        });\n\n        it('should test if users can export OptIns ', function (done) {\n            resetUsers();\n            const recipient_mail = \"bob@ci-doichain.org\"; //\n            const sender_mail_alice_a = \"alice-export_a@ci-doichain.org\";\n            const sender_mail_alice_b = \"alice-export_b@ci-doichain.org\";\n            const logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            createUser(global.dappUrlAlice,logAdmin,\"basicuser\",templateUrlA,true);\n            const logBasic = login(global.dappUrlAlice, {\"username\":\"basicuser\",\"password\":\"password\"}, true);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logBasic, global.dappUrlBob, recipient_mail, sender_mail_alice_a, {'city': 'MÃ¼nchen'}, \"bob@ci-doichain.org\", \"bob\", true);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logAdmin, global.dappUrlBob, recipient_mail, sender_mail_alice_b, {'city': 'MÃ¼nchen'}, \"bob@ci-doichain.org\", \"bob\", true);\n            const exportedOptIns = exportOptIns(global.dappUrlAlice, logAdmin, true);\n            chai.expect(exportedOptIns).to.not.be.undefined;\n            console.log(exportedOptIns);\n            chai.expect(exportedOptIns[0]).to.not.be.undefined;\n            chai.expect(exportedOptIns[0].RecipientEmail.email).to.be.equal(recipient_mail);\n\n            const exportedOptInsA = exportOptIns(global.dappUrlAlice, logBasic, true);\n            exportedOptInsA.forEach(element => {\n                chai.expect(element.ownerId).to.be.equal(logBasic.userId);\n            });\n            //chai.expect(findOptIn(resultDataOptIn._id)).to.not.be.undefined;\n            done();\n        });\n\n        it('should test if admin can update user profiles', function () {\n            resetUsers();\n            let logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            const userUp = createUser(global.dappUrlAlice, logAdmin, \"updateUser\", templateUrlA, true);\n            logBlockchain('createUser:',userUp);\n            const changedData = updateUser(global.dappUrlAlice, logAdmin, userUp, {\"templateURL\": templateUrlB}, true);\n            logBlockchain('changedData:',changedData);\n            chai.expect(changedData).not.undefined;\n        });\n\n        it('should test if user can update own profile', function () {\n            resetUsers();\n            let logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            const userUp = createUser(global.dappUrlAlice, logAdmin, \"updateUser\", templateUrlA, true);\n            //logBlockchain('should test if user can update own profile:userUp:',userUp);\n            const logUserUp = login(global.dappUrlAlice, {\"username\": \"updateUser\", \"password\": \"password\"}, true);\n            //logBlockchain('should test if user can update own profile:logUserUp:',logUserUp);\n            const changedData = updateUser(global.dappUrlAlice, logUserUp, userUp, {\"templateURL\": templateUrlB}, true);\n            chai.expect(changedData).not.undefined;\n        });\n\n        it('should test if coDoi works', function () {\n            const coDoiList = [\"aliceCo1@doichain-ci.com\", \"aliceCo2@doichain-ci.com\", \"aliceCo3@doichain-ci.com\"];\n            const recipient_mail = \"bob@ci-doichain.org\";\n            const sender_mail = coDoiList;\n            let logAdmin = login(global.dappUrlAlice, global.dAppLogin, true);\n            const coDois = requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, logAdmin, global.dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n        });\n\n        it('should find updated Data in email', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail = \"alice-update@ci-doichain.org\";\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {\"subject\": \"updateTest\", \"templateURL\": templateUrlB});\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, adLog, global.dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\",true, \"updateTest\");\n            done();\n        });\n\n        it('should use URL params', function (done) {\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail_a = \"alice-param-a@ci-doichain.org\";\n            const sender_mail_b = \"alice-param-b@ci-doichain.org\";\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {\"subject\": \"paramTest\", \"redirect\": \"https://www.doichain.org\", \"templateURL\": global.dappUrlAlice+\"/api/v1/template\"},true);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, adLog, global.dappUrlBob, recipient_mail, sender_mail_a, {'redirectParam': {'p':1},'templateParam':{'lang':'en'}}, \"bob@ci-doichain.org\", \"bob\",true,\"your free registation\");\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, adLog, global.dappUrlBob, recipient_mail, sender_mail_b, {'redirectParam': {'p':1},'templateParam':{'lang':'de'}}, \"bob@ci-doichain.org\", \"bob\",true,\"Ihre kostenlose Anmeldung\");\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {},true);\n            done();\n        });\n\n        it('should use the text version', function(done){\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail_a = \"alice-text@ci-doichain.org\";\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {\"subject\": \"textTest\", \"redirect\": \"\", \"templateURL\": templateUrlA.replace(\"html\",\"txt\")},true);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, adLog, global.dappUrlBob, recipient_mail, sender_mail_a,null,\"bob@ci-doichain.org\", \"bob\",true,\"your free registation\");\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {},true);\n            done();\n        });\n\n        it('should use the json/multipart version', function(done){\n            const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n            const sender_mail_a = \"alice-param-multi@ci-doichain.org\";\n            const adLog = login(global.dappUrlAlice, global.dAppLogin, false);\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {\"subject\": \"multiTest\", \"redirect\": \"\", \"templateURL\": templateUrlA.replace(\"html\",\"json\")},true);\n            requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, adLog, global.dappUrlBob, recipient_mail, sender_mail_a,null,\"bob@ci-doichain.org\", \"bob\",true,\"your free registation\");\n            updateUser(global.dappUrlAlice, adLog, adLog.userId, {},true);\n            done();\n        });\n\n        it('should redirect if confirmation-link is clicked again',function(){\n            for (let index = 0; index < 3; index++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\"+index+\"@ci-doichain.org\";\n                const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n                updateUser(global.dappUrlAlice, dataLoginAlice, dataLoginAlice.userId,{\"subject\":\"multiclickTest\"},true);\n                let returnedData = requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice, global.dappUrlAlice, dataLoginAlice, global.dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n                logBlockchain('double link click test returnedData:',returnedData)\n                chai.assert.notEqual(null,clickConfirmLink(returnedData.confirmLink).location);\n            }\n        });\n    });\n}","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    deleteAllEmailsFromPop3,\n    fetchConfirmLinkFromPop3Mail,\n    getNameIdOfOptInFromRawTx,\n    login,\n    requestDOI, verifyDOI, clickConfirmLink\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as testLogging\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {\n    deleteOptInsFromAliceAndBob,\n    generatetoaddress,\n    getNewAddress,\n    start3rdNode,\n    startDockerBob,\n    stopDockerBob, waitToStartContainer\n} from \"./test-api/test-api-on-node\";\nconst exec = require('child_process').exec;\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nconst rpcAuth = \"admin:generated-password\";\nconst dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\nconst log = true;\n\nif(Meteor.isAppTest) {\n    describe('02-basic-doi-test-with-offline-node-02', function () {\n\n        before(function () {\n            deleteOptInsFromAliceAndBob();\n            deleteAllEmailsFromPop3(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, true);\n            exec((global.inside_docker?'sudo':'')+' docker rm 3rd_node', (e, stdout2, stderr2) => {\n                testLogging('deleted 3rd_node:', {stdout: stdout2, stderr: stderr2});\n            });\n\n            try {\n                exec((global.inside_docker?'sudo':'')+' docker stop 3rd_node', (e, stdout, stderr) => {\n                    testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                    exec((global.inside_docker?'sudo':'')+' docker rm 3rd_node', (e, stdout, stderr) => {\n                        testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                    });\n                });\n            } catch (ex) {\n                testLogging('could not stop 3rd_node',);\n            }\n        });\n\n        before(function () {\n            try {\n                exec((global.inside_docker?'sudo':'')+' docker stop 3rd_node', (e, stdout, stderr) => {\n                    testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                    exec((global.inside_docker?'sudo':'')+' docker rm 3rd_node', (e, stdout, stderr) => {\n                        testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                    });\n                });\n            } catch (ex) {\n                testLogging('could not stop 3rd_node',);\n            }\n        });\n\n        it('should test if basic Doichain workflow is working when Bobs node is temporarily offline', function (done) {\n            this.timeout(0);\n            global.aliceAddress = getNewAddress(global.node_url_alice, rpcAuth, false);\n            //start another 3rd node before shutdown Bob\n            start3rdNode();\n            var containerId = stopDockerBob();\n            const recipient_mail = \"bob@ci-doichain.org\";\n            const sender_mail = \"alice-to-offline-node@ci-doichain.org\";\n            //login to dApp & request DOI on alice via bob\n            if (log) testLogging('log into alice and request DOI');\n            let dataLoginAlice = login(global.dappUrlAlice, dAppLogin, false); //log into dApp\n            let resultDataOptIn = requestDOI(global.dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n\n            const nameId = getNameIdOfOptInFromRawTx(global.node_url_alice, rpcAuth, resultDataOptIn.data.id, true);\n            if (log) testLogging('got nameId', nameId);\n            var startedContainerId = startDockerBob(containerId);\n            testLogging(\"started bob's node with containerId\", startedContainerId);\n            chai.expect(startedContainerId).to.not.be.null;\n            waitToStartContainer(startedContainerId);\n\n            //generating a block so transaction gets confirmed and delivered to bob.\n            generatetoaddress(global.node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n            let running = true;\n            let counter = 0;\n            (async function loop() {\n                while (running && ++counter < 50) { //trying 50x to get email from bobs mailbox\n                    try {\n                        //  generatetoaddress(node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n                        testLogging('step 3: getting email!');\n                        const link2Confirm = fetchConfirmLinkFromPop3Mail(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, dappUrlBob, false);\n                        testLogging('step 4: confirming link', link2Confirm);\n                        if (link2Confirm != null) running = false;\n                        clickConfirmLink(link2Confirm);\n                        testLogging('confirmed');\n                    } catch (ex) {\n                        testLogging('trying to get email - so far no success:', counter);\n                        await new Promise(resolve => setTimeout(resolve, 2000));\n                    }\n                }\n                })();\n\n                generatetoaddress(global.node_url_alice, rpcAuth, global.aliceAddress, 1, true);\n                verifyDOI(global.dappUrlAlice, dataLoginAlice, global.node_url_alice, rpcAuth, sender_mail, recipient_mail, nameId, log); //need to generate two blocks to make block visible on alice\n                testLogging('end of getNameIdOfRawTransaction returning nameId', nameId);\n                try {\n                    exec((global.inside_docker?'sudo':'')+' docker stop 3rd_node', (e, stdout, stderr) => {\n                        testLogging('stopped 3rd_node:', {stdout: stdout, stderr: stderr});\n                        exec((global.inside_docker?'sudo':'')+' docker rm 3rd_node', (e, stdout, stderr) => {\n                            testLogging('removed 3rd_node:', {stdout: stdout, stderr: stderr});\n                        });\n                    });\n                } catch (ex) {\n                    testLogging('could not stop 3rd_node',);\n                }\n                done();\n        }); //it\n    });\n}\n","import {chai} from 'meteor/practicalmeteor:chai';\nimport {\n    deleteAllEmailsFromPop3, findOptIn,\n    login,\n    requestConfirmVerifyBasicDoi, requestDOI\n} from \"./test-api/test-api-on-dapp\";\nimport {\n    testLog as logBlockchain\n} from \"meteor/doichain:doichain-meteor-api\";\nimport {deleteOptInsFromAliceAndBob, generatetoaddress, getNewAddress} from \"./test-api/test-api-on-node\";\n\nconst recipient_pop3username = \"bob@ci-doichain.org\";\nconst recipient_pop3password = \"bob\";\n\nif(Meteor.isAppTest) {\n    describe('03-basic-doi-test-03', function () {\n        this.timeout(0);\n        \n        before(function () {\n            logBlockchain(\"removing OptIns,Recipients,Senders\");\n            //deleteOptInsFromAliceAndBob();\n            //deleteAllEmailsFromPop3(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, true);\n        });\n\n        it('should test if basic Doichain workflow running 5 times', function (done) {\n            this.timeout(0);\n\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(global.node_url_alice, global.rpcAuthAlice, false);\n            for (let i = 0; i < 5; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                requestConfirmVerifyBasicDoi(global.node_url_alice, global.rpcAuthAlice,global.dappUrlAlice,\n                    dataLoginAlice,global.dappUrlBob,recipient_mail, sender_mail, {'city': 'Ekaterinburg_' + i}, \"bob@ci-doichain.org\", \"bob\", true);\n            }\n            done();\n        });\n\n        it('should test if basic Doichain workflow runs 20 times without confirmation, verification and new block', function (done) {\n            this.timeout(0);\n            deleteAllEmailsFromPop3(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, true);\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(global.node_url_alice, global.rpcAuthAlice, false);\n            for (let i = 0; i < 20; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                const resultDataOptIn = requestDOI(global.dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n                chai.expect(findOptIn(resultDataOptIn.data.id, true)).to.not.be.undefined;\n            }\n            done();\n        });\n\n        it('should test if basic Doichain workflow runs 100 times without confirmation and verification', function (done) {\n            this.timeout(0);\n            deleteAllEmailsFromPop3(global.inside_docker?\"mail\":\"localhost\", 110, recipient_pop3username, recipient_pop3password, true);\n            const dataLoginAlice = login(global.dappUrlAlice, global.dAppLogin, false); //log into dApp\n            global.aliceAddress = getNewAddress(global.node_url_alice, global.rpcAuthAlice, false);\n            for (let i = 0; i < 100; i++) {\n                const recipient_mail = \"bob@ci-doichain.org\"; //please use this as standard to not confuse people!\n                const sender_mail = \"alice_\" + i + \"@ci-doichain.org\";\n                const resultDataOptIn = requestDOI(global.dappUrlAlice, dataLoginAlice, recipient_mail, sender_mail, null, true);\n                chai.expect(findOptIn(resultDataOptIn.data.id, true)).to.not.be.undefined;\n                if (i % 100 === 0) generatetoaddress(global.node_url_alice, global.rpcAuthAlice, global.aliceAddress, 1, true);\n            }\n            done();\n        });\n    });\n}","if(Meteor.isAppTest || Meteor.isTest) {\n\n    xdescribe('simple-selenium-test', function () {\n\n        this.timeout(10000);\n        beforeEach(function () {\n\n        });\n\n\n    });\n}\n","// import {chai} from 'meteor/practicalmeteor:chai';\n// import {\n//     testLog as logBlockchain\n// } from \"meteor/doichain:doichain-meteor-api\";\n//\n// import {deleteOptInsFromAliceAndBob, getBalance, initBlockchain} from \"./test-api/test-api-on-node\";\n// import {login, requestConfirmVerifyBasicDoi} from \"./test-api/test-api-on-dapp\";\n// const node_url_alice = 'http://172.20.0.6:18332/';\n// const node_url_bob =   'http://172.20.0.7:18332/';\n// const rpcAuth = \"admin:generated-password\";\n// const privKeyBob = \"cP3EigkzsWuyKEmxk8cC6qXYb4ZjwUo5vzvZpAPmDQ83RCgXQruj\";\n// const log = true;\n//\n//\n// const rpcAuthAlice = \"admin:generated-password\";\n// const dappUrlAlice = \"http://localhost:3000\";\n// const dappUrlBob = \"http://172.20.0.8:4000\";\n// const dAppLogin = {\"username\":\"admin\",\"password\":\"password\"};\n//\n//\n// if(Meteor.isTest || Meteor.isAppTest) {\n//\n//     xdescribe('basic-doi-test-nico', function () {\n//         this.timeout(600000);\n//\n//         before(function () {\n//             logBlockchain(\"removing OptIns,Recipients,Senders\");\n//             deleteOptInsFromAliceAndBob();\n//         });\n//\n//         xit('should create a RegTest Doichain with alice and bob and some Doi - coins', function () {\n//             initBlockchain(node_url_alice,node_url_bob,rpcAuth,privKeyBob,true);\n//             const aliceBalance = getBalance(node_url_alice, rpcAuth, log);\n//             chai.assert.isAbove(aliceBalance, 0, 'no funding! ');\n//         });\n//\n//         xit('should test if basic Doichain workflow is working with optional data', function (done) {\n//             const recipient_mail = \"bob+1@ci-doichain.org\"; //please use this as standard to not confuse people!\n//             const sender_mail = \"alice@ci-doichain.org\";\n//             const dataLoginAlice = login(dappUrlAlice, dAppLogin, false); //log into dApp\n//             requestConfirmVerifyBasicDoi(node_url_alice, rpcAuthAlice, dappUrlAlice, dataLoginAlice, dappUrlBob, recipient_mail, sender_mail, {'city': 'Ekaterinburg'}, \"bob@ci-doichain.org\", \"bob\", true);\n//             done();\n//         });\n//     });\n//\n//     xdescribe('basic-doi-test-nico', function () {\n//\n//\n//         /**\n//          * Information regarding to event loop node.js\n//          * - https://nodejs.org/en/docs/guides/event-loop-timers-and-nexttick/\n//          *\n//          * Promises:\n//          * - https://developers.google.com/web/fundamentals/primers/promises\n//          *\n//          * Promise loops and async wait\n//          * - https://stackoverflow.com/questions/40328932/javascript-es6-promise-for-loop\n//          *\n//          * Asynchronous loops with mocha:\n//          * - https://whitfin.io/asynchronous-test-loops-with-mocha/\n//          */\n//         /*  it('should test a timeout with a promise', function (done) {\n//               logBlockchain(\"truying a promise\");\n//               for (let i = 0; i < 10; i++) {\n//                   const promise = new Promise((resolve, reject) => {\n//                       const timeout = Math.random() * 1000;\n//                       setTimeout(() => {\n//                           console.log('promise:'+i);\n//                       }, timeout);\n//                   });\n//                   // TODO: Chain this promise to the previous one (maybe without having it running?)\n//               }\n//               done();\n//           });\n//\n//           it('should run a loop with async wait', function (done) {\n//               logBlockchain(\"trying asycn wait\");\n//               (async function loop() {\n//                   for (let i = 0; i < 10; i++) {\n//                       await new Promise(resolve => setTimeout(resolve, Math.random() * 1000));\n//                       console.log('async wait'+i);\n//                   }\n//                   done()\n//               })();\n//           });\n//\n//           xit('should safely stop and start bobs doichain node container', function (done) {\n//               var containerId = stopDockerBob();\n//\n//               logBlockchain(\"stopped bob's node with containerId\",containerId);\n//               chai.expect(containerId).to.not.be.null;\n//\n//               var startedContainerId = startDockerBob(containerId);\n//               logBlockchain(\"started bob's node with containerId\",startedContainerId);\n//               chai.expect(startedContainerId).to.not.be.null;\n//\n//               let running = true;\n//               while(running){\n//                   runAndWait(function () {\n//                       try{\n//                           const statusDocker = JSON.parse(getDockerStatus(containerId));\n//                           logBlockchain(\"getinfo\",statusDocker);\n//                           logBlockchain(\"version:\"+statusDocker.version);\n//                           logBlockchain(\"balance:\"+statusDocker.balance);\n//                           logBlockchain(\"balance:\"+statusDocker.connections);\n//                           if(statusDocker.connections===0){\n//                               doichainAddNode(containerId);\n//                           }\n//                           running = false;\n//                       }\n//                       catch(error){\n//                           logBlockchain(\"statusDocker problem:\",error);\n//                       }\n//                   },2);\n//               }\n//\n//               done();\n//           });*/\n//     });\n// }\n","import {chai} from 'meteor/practicalmeteor:chai';\nif(Meteor.isTest) {\n\n    xdescribe('basic-doi-test-flo', function () {\n    });\n}\n\n\n","Meteor.publish('users.user', function () {\n  if (this.userId) {\n    return Meteor.users.find({\n      _id: this.userId\n    }, {\n      fields: {\n        'emails': 1,\n        'profile': 1,\n        'services': 1\n      }\n    })\n  } else {\n    return this.ready()\n  }\n})\n"]}